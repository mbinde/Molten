Command line invocation:
    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild test -project Flameworker.xcodeproj -scheme Flameworker -testPlan UnitTestsOnly -destination "platform=iOS Simulator,name=iPhone 17"

ComputePackagePrebuildTargetDependencyGraph

Prepare packages

CreateBuildRequest

SendProjectDescription

CreateBuildOperation

ComputeTargetDependencyGraph
note: Building targets in dependency order
note: Target dependency graph (5 targets)
    Target 'RepositoryTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'PerformanceTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'FlameworkerUITests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'FlameworkerTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'Flameworker' in project 'Flameworker' (no dependencies)

GatherProvisioningInputs

CreateBuildDescription

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc --version

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -v -E -dM -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -x c -c /dev/null

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/momc --dry-run --action generate --swift-version 5.0 --sdkroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk --iphonesimulator-deployment-target 26.0 --module Flameworker /Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Flameworker.xcdatamodeld /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources/CoreDataGenerated/Flameworker

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/actool --print-asset-tag-combinations --output-format xml1 /Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Assets.xcassets

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/actool --version --output-format xml1

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld -version_details

Build description signature: 84be6f63eff66e7d7ad216603f158c1e
Build description path: /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/XCBuildData/84be6f63eff66e7d7ad216603f158c1e.xcbuilddata
ClangStatCache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker.xcodeproj
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -o /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache

ProcessInfoPlistFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Info.plist /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Info.plist (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-infoPlistUtility /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Info.plist -producttype com.apple.product-type.application -genpkginfo /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PkgInfo -expandbuildsettings -format binary -platform iphonesimulator -additionalcontentfile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_generated_info.plist -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Info.plist

CopySwiftLibs /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-swiftStdLibTool --copy --verbose --sign - --scan-executable /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Flameworker.debug.dylib --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/SystemExtensions --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Extensions --platform iphonesimulator --toolchain /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --destination /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks --strip-bitcode --strip-bitcode-tool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/bitcode_strip --emit-dependency-info /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/SwiftStdLibToolInputDependencies.dep --filter-for-swift-os

SwiftDriver FlameworkerTests normal arm64 com.apple.xcode.tools.swift.compiler (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-SwiftDriver -- /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name FlameworkerTests -Onone -enforce-exclusivity\=checked @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests.SwiftFileList -DDEBUG -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing -enable-bare-slash-regex -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -target arm64-apple-ios26.0-simulator -g -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -Xfrontend -serialize-debugging-options -profile-coverage-mapping -profile-generate -enable-testing -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -swift-version 5 -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -Isystem /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/Developer/Library/Frameworks -c -j11 -enable-batch-mode -incremental -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -explicit-module-build -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -clang-scanner-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -sdk-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests.swiftmodule -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests_const_extract_protocols.json -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources -Xcc -DDEBUG\=1 -emit-objc-header -emit-objc-header-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-Swift.h -working-directory /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -experimental-emit-module-separately -disable-cmo
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:153:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:200:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:229:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:262:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:305:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:329:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:356:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:397:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:422:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:453:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:153:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:200:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:229:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:262:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:305:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:329:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:356:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:397:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:422:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:453:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')

ProcessInfoPlistFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/Info.plist /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/RepositoryTests.build/empty-RepositoryTests.plist (in target 'RepositoryTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-infoPlistUtility /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/RepositoryTests.build/empty-RepositoryTests.plist -producttype com.apple.product-type.bundle.unit-test -expandbuildsettings -format binary -platform iphonesimulator -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/Info.plist

ProcessInfoPlistFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/Info.plist /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/PerformanceTests.build/empty-PerformanceTests.plist (in target 'PerformanceTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-infoPlistUtility /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/PerformanceTests.build/empty-PerformanceTests.plist -producttype com.apple.product-type.bundle.unit-test -expandbuildsettings -format binary -platform iphonesimulator -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/Info.plist

ProcessInfoPlistFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/FlameworkerTests.xctest/Info.plist /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/empty-FlameworkerTests.plist (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-infoPlistUtility /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/empty-FlameworkerTests.plist -producttype com.apple.product-type.bundle.unit-test -expandbuildsettings -format binary -platform iphonesimulator -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/FlameworkerTests.xctest/Info.plist

CopySwiftLibs /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest (in target 'RepositoryTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-swiftStdLibTool --copy --verbose --sign - --scan-executable /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/RepositoryTests --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/Frameworks --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/PlugIns --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/SystemExtensions --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/Extensions --platform iphonesimulator --toolchain /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --destination /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest/Frameworks --strip-bitcode --scan-executable /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestSwiftSupport.dylib --strip-bitcode-tool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/bitcode_strip --emit-dependency-info /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/RepositoryTests.build/SwiftStdLibToolInputDependencies.dep --filter-for-swift-os

CopySwiftLibs /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest (in target 'PerformanceTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-swiftStdLibTool --copy --verbose --sign - --scan-executable /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/PerformanceTests --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/Frameworks --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/PlugIns --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/SystemExtensions --scan-folder /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/Extensions --platform iphonesimulator --toolchain /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain --destination /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest/Frameworks --strip-bitcode --scan-executable /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestSwiftSupport.dylib --strip-bitcode-tool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/bitcode_strip --emit-dependency-info /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/PerformanceTests.build/SwiftStdLibToolInputDependencies.dep --filter-for-swift-os

SwiftCompile normal arm64 Compiling\ CatalogItemHelpersTests.swift,\ CatalogItemModelPhase1Tests.swift,\ CatalogItemParentModelTests.swift,\ CatalogServiceAdvancedTests.swift,\ CatalogViewDataInitializationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:26:27: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let catalogItem = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:47:27: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let catalogItem = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:60:26: warning: comparing non-optional value of type '[String]' to 'nil' always returns true
        #expect(synonyms != nil, "Should work with business models without Core Data")
                ~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:61:21: warning: comparing non-optional value of type 'String' to 'nil' always returns true
        #expect(coe != nil, "Should get COE from business model")
                ~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:62:23: warning: comparing non-optional value of type 'Color' to 'nil' always returns true
        #expect(color != nil, "Should get manufacturer color from business model")
                ~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:68:27: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let catalogItem = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:91:27: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let catalogItem = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:102:22: warning: comparing non-optional value of type 'String' to 'nil' always returns true
        #expect(tags != nil, "Should work without Core Data imports")
                ~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift:103:29: warning: comparing non-optional value of type 'CatalogItemDisplayInfo' to 'nil' always returns true
        #expect(displayInfo != nil, "Should create display info without Core Data")
                ~~~~~~~~~~~ ^  ~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:70: warning: main actor-isolated property 'id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.id:2:25: note: property declared here
@MainActor internal let id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX42_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""rod""#, "rod")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX43_8_6expectfMf1_.swift:1:38: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should inherit manufacturer from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX44_8_6expectfMf2_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.tags,{ $0 == $1() },["red", "transparent"],expression: .__fromBinaryOperation(.__fromSyntaxNode("child.tags"),"==",.__fromSyntaxNode(#"["red", "transparent"]"#)),comments: ["Should inherit tags from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX45_8_6expectfMf3_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX46_8_6expectfMf4_.swift:1:35: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.code.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX66_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"frit",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""frit""#, "frit")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_subtype,{ $0 == $1() },"fine",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_subtype"),"==",.__fromStringLiteral(#""fine""#, "fine")),comments: ["Should set item subtype"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:89:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX112_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent2)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX136_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX185_12_6expectfMf_.swift:2:27: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try child.validate()
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:321: warning: main actor-isolated property 'item_type' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_type:2:25: note: property declared here
@MainActor internal let item_type: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:348: warning: main actor-isolated property 'item_subtype' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_subtype:2:25: note: property declared here
@MainActor internal let item_subtype: String?}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:43: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX414_8_6expectfMf_.swift:1:42: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.id"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Should have new parent-child fields populated"),"Should have legacy ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX415_8_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'id2' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.id2.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.id2.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have new ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX416_8_6expectfMf1_.swift:1:43: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.parent_id.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.parent_id.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX417_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.item_type.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.item_type"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should have item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX420_8_6expectfMf3_.swift:1:43: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.code,{ $0 == $1() },"LEGACY CORP-LGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.code"),"==",.__fromStringLiteral(#""LEGACY CORP-LGR-001""#, "LEGACY CORP-LGR-001")),comments: [.__line("// Should have proper code formatting"),"Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX36_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.id,{ $0 == $1() },parentId,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.id"),"==",.__fromSyntaxNode("parentId")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX37_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Red Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Red Glass""#, "Red Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX38_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BULLSEYE-0124",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BULLSEYE-0124""#, "BULLSEYE-0124")),comments: ["Should preserve base code"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX39_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX40_8_6expectfMf3_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"90",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""90""#, "90")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX41_8_6expectfMf4_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags,{ $0 == $1() },["red", "transparent", "coe90"],expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags"),"==",.__fromSyntaxNode(#"["red", "transparent", "coe90"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX53_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.id.description.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("parent.id.description"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX54_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("parent.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX66_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX69_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"104",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""104""#, "104")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX169_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX183_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX197_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX211_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX245_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX262_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX280_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX313_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX615_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [orphanedChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX639_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [inconsistentChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX725_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: ["Parents with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX726_8_6expectfMf0_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 != $1() },parent3,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"!=",.__fromSyntaxNode("parent3")),comments: ["Parents with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX752_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: [.__line("// Items should be equal"),"Parents with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX756_8_6expectfMf0_.swift:1:42: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parentSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("parentSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal parents"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX815_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:101: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:91: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX185_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResult.items.count,{ $0 >= $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResult.items.count"),">=",.__fromSyntaxNode("2")),comments: ["Should find multiple red items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX211_8_6expectfMf_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults1.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults1.items.count"),">=",.__fromSyntaxNode("0")),comments: [.__line("// Depending on implementation, fuzzy matching might or might not work"),.__line("// At minimum, search should not crash with misspelled terms"),"Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX212_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults2.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults2.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX228_8_6expectfMf_.swift:1:49: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(multiWordResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("multiWordResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle multi-word searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX233_8_6expectfMf0_.swift:1:51: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(specialCharResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("specialCharResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle searches with special characters"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX242_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(emptyResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("emptyResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle empty searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX243_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(whitespaceResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("whitespaceResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle whitespace searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:86: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemSearchResult.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.CompleteInventoryItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:3:8: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
},item.manufacturer.lowercased(),expression: .__fromFunctionCall(.__fromSyntaxNode("savedItem.glassItem.natural_key"),"contains",(nil,.__fromSyntaxNode("item.manufacturer.lowercased()"))),comments: ["Natural key should contain manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX435_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 == $1() },100,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),"==",.__fromSyntaxNode("100")),comments: ["Search should work efficiently with 100 items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:70: warning: main actor-isolated property 'id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.id:2:25: note: property declared here
@MainActor internal let id: UUID}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:27:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:35:21: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let child = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX42_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""rod""#, "rod")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX43_8_6expectfMf1_.swift:1:38: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should inherit manufacturer from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX44_8_6expectfMf2_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.tags,{ $0 == $1() },["red", "transparent"],expression: .__fromBinaryOperation(.__fromSyntaxNode("child.tags"),"==",.__fromSyntaxNode(#"["red", "transparent"]"#)),comments: ["Should inherit tags from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX45_8_6expectfMf3_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX46_8_6expectfMf4_.swift:1:35: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.code.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:52:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:60:21: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let child = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX66_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"frit",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""frit""#, "frit")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_subtype,{ $0 == $1() },"fine",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_subtype"),"==",.__fromStringLiteral(#""fine""#, "fine")),comments: ["Should set item subtype"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:89:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:76:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:83:21: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let child = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:88:19: warning: main actor-isolated instance method 'validateParentRelationship(with:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try child.validateParentRelationship(with: parent)
        ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX112_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent2)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:94:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent1 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:101:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent2 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:108:21: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let child = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX136_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:120:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:128:21: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let child = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:128:21: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let child = CatalogItemModel(
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:129:24: note: property access is 'async'
            parent_id: parent.id,
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:162:21: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
            #expect(true, "Item type '\(itemType)' should be valid")
                    ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:146:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:156:25: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let child = CatalogItemModel(
                        ^~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:161:23: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            try child.validate()
            ~~~~~~~~~~^~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX185_12_6expectfMf_.swift:2:27: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try child.validate()
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:168:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:178:25: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            let child = CatalogItemModel(
                        ^~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:178:25: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
            let child = CatalogItemModel(
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:179:28: note: property access is 'async'
                parent_id: parent.id,
                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:211:21: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
            #expect(true, "Item subtype '\(subtype)' should be valid")
                    ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:194:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:204:25: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let child = CatalogItemModel(
                        ^~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:210:23: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            try child.validate()
            ~~~~~~~~~~^~~~~~~~~~
                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:219:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:234:52: warning: main actor-isolated static method 'constructVariantName(parent:itemType:itemSubtype:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let constructedName = CatalogItemModel.constructVariantName(
                                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:247:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:263:52: warning: main actor-isolated static method 'constructVariantCode(parent:itemType:itemSubtype:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let constructedCode = CatalogItemModel.constructVariantCode(
                                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:301:21: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
            #expect(true, "URL '\(url)' should be valid")
                    ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:279:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:294:25: warning: main actor-isolated initializer 'init(parent:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let child = CatalogItemModel(
                        ^~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:300:23: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            try child.validate()
            ~~~~~~~~~~^~~~~~~~~~
                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:333:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid URLs should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:354:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Empty URLs should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:375:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Nil URLs should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:307:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:315:33: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let childWithValidURL = CatalogItemModel(
                                ^~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:315:33: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let childWithValidURL = CatalogItemModel(
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:318:24: note: property access is 'async'
            parent_id: parent.id,
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:332:31: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try childWithValidURL.validate()
        ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:336:33: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let childWithEmptyURL = CatalogItemModel(
                                ^~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:336:33: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let childWithEmptyURL = CatalogItemModel(
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:339:24: note: property access is 'async'
            parent_id: parent.id,
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:353:31: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try childWithEmptyURL.validate()
        ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:357:31: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let childWithNilURL = CatalogItemModel(
                              ^~~~~~~~~~~~~~~~~
                              await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:357:31: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let childWithNilURL = CatalogItemModel(
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:360:24: note: property access is 'async'
            parent_id: parent.id,
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:374:29: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try childWithNilURL.validate()
        ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:392:30: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
            let legacyItem = CatalogItemModel(
                             ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:321: warning: main actor-isolated property 'item_type' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_type:2:25: note: property declared here
@MainActor internal let item_type: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:348: warning: main actor-isolated property 'item_subtype' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_subtype:2:25: note: property declared here
@MainActor internal let item_subtype: String?}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:392:30: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let legacyItem = CatalogItemModel(
                             ^~~~~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:43: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:408:26: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let legacyItem = CatalogItemModel(
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:425:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Legacy item should validate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:408:26: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let legacyItem = CatalogItemModel(
                         ^~~~~~~~~~~~~~~~~
                         await 
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX414_8_6expectfMf_.swift:1:42: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.id"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Should have new parent-child fields populated"),"Should have legacy ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX415_8_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'id2' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.id2.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.id2.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have new ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX416_8_6expectfMf1_.swift:1:43: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.parent_id.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.parent_id.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX417_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.item_type.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.item_type"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should have item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX420_8_6expectfMf3_.swift:1:43: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.code,{ $0 == $1() },"LEGACY CORP-LGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.code"),"==",.__fromStringLiteral(#""LEGACY CORP-LGR-001""#, "LEGACY CORP-LGR-001")),comments: [.__line("// Should have proper code formatting"),"Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:424:24: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try legacyItem.validate()
        ~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX36_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.id,{ $0 == $1() },parentId,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.id"),"==",.__fromSyntaxNode("parentId")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX37_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Red Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Red Glass""#, "Red Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX38_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BULLSEYE-0124",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BULLSEYE-0124""#, "BULLSEYE-0124")),comments: ["Should preserve base code"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX39_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX40_8_6expectfMf3_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"90",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""90""#, "90")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX41_8_6expectfMf4_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags,{ $0 == $1() },["red", "transparent", "coe90"],expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags"),"==",.__fromSyntaxNode(#"["red", "transparent", "coe90"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX53_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.id.description.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("parent.id.description"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX54_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("parent.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX66_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX69_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"104",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""104""#, "104")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX169_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX183_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX197_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX211_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX245_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX262_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX280_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX313_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX615_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [orphanedChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX639_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [inconsistentChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX725_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: ["Parents with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX726_8_6expectfMf0_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 != $1() },parent3,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"!=",.__fromSyntaxNode("parent3")),comments: ["Parents with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX752_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: [.__line("// Items should be equal"),"Parents with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX756_8_6expectfMf0_.swift:1:42: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parentSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("parentSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal parents"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX815_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:101: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:91: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX185_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResult.items.count,{ $0 >= $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResult.items.count"),">=",.__fromSyntaxNode("2")),comments: ["Should find multiple red items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX211_8_6expectfMf_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults1.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults1.items.count"),">=",.__fromSyntaxNode("0")),comments: [.__line("// Depending on implementation, fuzzy matching might or might not work"),.__line("// At minimum, search should not crash with misspelled terms"),"Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX212_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults2.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults2.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX228_8_6expectfMf_.swift:1:49: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(multiWordResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("multiWordResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle multi-word searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX233_8_6expectfMf0_.swift:1:51: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(specialCharResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("specialCharResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle searches with special characters"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX242_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(emptyResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("emptyResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle empty searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX243_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(whitespaceResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("whitespaceResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle whitespace searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:86: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemSearchResult.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.CompleteInventoryItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:3:8: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
},item.manufacturer.lowercased(),expression: .__fromFunctionCall(.__fromSyntaxNode("savedItem.glassItem.natural_key"),"contains",(nil,.__fromSyntaxNode("item.manufacturer.lowercased()"))),comments: ["Natural key should contain manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX435_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 == $1() },100,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),"==",.__fromSyntaxNode("100")),comments: ["Search should work efficiently with 100 items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:70: warning: main actor-isolated property 'id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.id:2:25: note: property declared here
@MainActor internal let id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX42_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""rod""#, "rod")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX43_8_6expectfMf1_.swift:1:38: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should inherit manufacturer from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX44_8_6expectfMf2_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.tags,{ $0 == $1() },["red", "transparent"],expression: .__fromBinaryOperation(.__fromSyntaxNode("child.tags"),"==",.__fromSyntaxNode(#"["red", "transparent"]"#)),comments: ["Should inherit tags from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX45_8_6expectfMf3_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX46_8_6expectfMf4_.swift:1:35: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.code.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX66_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"frit",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""frit""#, "frit")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_subtype,{ $0 == $1() },"fine",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_subtype"),"==",.__fromStringLiteral(#""fine""#, "fine")),comments: ["Should set item subtype"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:89:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX112_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent2)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX136_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX185_12_6expectfMf_.swift:2:27: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try child.validate()
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:321: warning: main actor-isolated property 'item_type' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_type:2:25: note: property declared here
@MainActor internal let item_type: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:348: warning: main actor-isolated property 'item_subtype' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_subtype:2:25: note: property declared here
@MainActor internal let item_subtype: String?}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:43: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX414_8_6expectfMf_.swift:1:42: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.id"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Should have new parent-child fields populated"),"Should have legacy ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX415_8_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'id2' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.id2.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.id2.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have new ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX416_8_6expectfMf1_.swift:1:43: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.parent_id.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.parent_id.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX417_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.item_type.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.item_type"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should have item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX420_8_6expectfMf3_.swift:1:43: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.code,{ $0 == $1() },"LEGACY CORP-LGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.code"),"==",.__fromStringLiteral(#""LEGACY CORP-LGR-001""#, "LEGACY CORP-LGR-001")),comments: [.__line("// Should have proper code formatting"),"Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:28:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX36_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.id,{ $0 == $1() },parentId,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.id"),"==",.__fromSyntaxNode("parentId")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX37_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Red Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Red Glass""#, "Red Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX38_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BULLSEYE-0124",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BULLSEYE-0124""#, "BULLSEYE-0124")),comments: ["Should preserve base code"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX39_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX40_8_6expectfMf3_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"90",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""90""#, "90")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX41_8_6expectfMf4_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags,{ $0 == $1() },["red", "transparent", "coe90"],expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags"),"==",.__fromSyntaxNode(#"["red", "transparent", "coe90"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:47:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX53_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.id.description.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("parent.id.description"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX54_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("parent.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:60:22: warning: main actor-isolated initializer 'init(id:base_name:raw_base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX66_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX69_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"104",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""104""#, "104")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:84:51: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemParentModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:103:51: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemParentModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:134:51: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemParentModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:158:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:148:27: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let validParent = CatalogItemParentModel(
                          ^~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:156:25: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try validParent.validate()
        ~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX169_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:163:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX183_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:177:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX197_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:191:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX211_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:205:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:233:21: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
            #expect(true, "COE value '\(coe)' should be valid")
                    ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:224:26: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let parent = CatalogItemParentModel(
                         ^~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:231:24: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            try parent.validate()
            ~~~~~~~~~~~^~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX245_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:239:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX262_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:256:33: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let invalidParent = CatalogItemParentModel(
                                ^~~~~~~~~~~~~~~~~~~~~~~
                                await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX280_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:274:33: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let invalidParent = CatalogItemParentModel(
                                ^~~~~~~~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:300:21: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
            #expect(true, "Base code '\(code)' should be valid")
                    ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:292:31: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let validParent = CatalogItemParentModel(
                              ^~~~~~~~~~~~~~~~~~~~~~~
                              await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:299:29: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            try validParent.validate()
            ~~~~~~~~~~~~~~~~^~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX313_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:306:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let invalidParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:330:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid tags should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:321:27: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let validParent = CatalogItemParentModel(
                          ^~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:329:25: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try validParent.validate()
        ~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:346:49: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let result = CatalogItemParentModel.tagsToString(testCase.tags)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:364:49: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let result = CatalogItemParentModel.stringToTags(testCase.string)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:374:45: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let string = CatalogItemParentModel.tagsToString(originalTags)
                     ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:375:52: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedTags = CatalogItemParentModel.stringToTags(string)
                            ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:384:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent1 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:392:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let parent2 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:392:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let parent2 = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:393:17: note: property access is 'async'
            id: parent1.id, // Same ID
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:401:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: parent1, new: parent2)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:407:24: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:414:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:414:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:415:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:422:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:428:24: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:435:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:435:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:436:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:443:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:449:24: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:456:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:456:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:457:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:464:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:471:24: warning: main actor-isolated initializer 'init(id:base_name:raw_base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:479:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:479:23: note: calls to initializer 'init(id:base_name:raw_base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:480:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:488:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:495:24: warning: main actor-isolated initializer 'init(id:base_name:raw_base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:504:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:504:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:505:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:512:49: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:518:24: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemParentModel(
                       ^~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:545:27: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            let updated = CatalogItemParentModel(
                          ^~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:545:27: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
            let updated = CatalogItemParentModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:546:21: note: property access is 'async'
                id: existing.id,
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:554:53: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let hasChanges = CatalogItemParentModel.hasChanges(existing: existing, new: updated)
                             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:596:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:569:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:577:24: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let children = [
                       ^
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:578:13: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
            CatalogItemModel(
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:585:13: note: calls to initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
            CatalogItemModel(
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:595:36: warning: main actor-isolated static method 'validateParentChildRelationship(parent:children:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: children)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX615_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [orphanedChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:601:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:608:29: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let orphanedChild = CatalogItemModel(
                            ^~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX639_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [inconsistentChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:624:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:632:33: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inconsistentChild = CatalogItemModel(
                                ^~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:649:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:657:37: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = parent.searchableText
                             ~~~~~~~^~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:676:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:684:37: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = parent.searchableText
                             ~~~~~~~^~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX725_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: ["Parents with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX726_8_6expectfMf0_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 != $1() },parent3,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"!=",.__fromSyntaxNode("parent3")),comments: ["Parents with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:699:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent1 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:708:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let parent2 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:708:23: note: calls to initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' from outside of its actor context are implicitly asynchronous
        let parent2 = CatalogItemParentModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:709:17: note: property access is 'async'
            id: parent1.id, // Same ID
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:717:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent3 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX752_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: [.__line("// Items should be equal"),"Parents with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:756:54: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
        let parentSet: Set<CatalogItemParentModel> = [parent1, parent2]
                                                     ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX756_8_6expectfMf0_.swift:1:42: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parentSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("parentSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal parents"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:734:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent1 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:743:23: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent2 = CatalogItemParentModel(
                      ^~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:777:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Parent with very long fields should still be valid")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:788:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Parent with single character fields should be valid")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:799:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Parent with special characters should be valid")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:769:26: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let longParent = CatalogItemParentModel(
                         ^~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:776:24: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try longParent.validate()
        ~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:780:27: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shortParent = CatalogItemParentModel(
                          ^~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:787:25: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try shortParent.validate()
        ~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:791:29: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let specialParent = CatalogItemParentModel(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:798:27: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try specialParent.validate()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~
            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:807:22: warning: main actor-isolated initializer 'init(id:base_name:base_code:manufacturer:coe:tags:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let parent = CatalogItemParentModel(
                     ^~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:815:20: warning: main actor-isolated instance method 'validate()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        try parent.validate()
        ~~~~~~~~~~~^~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX815_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:819:48: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let tagString = CatalogItemParentModel.tagsToString(largeTags)
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:820:52: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedTags = CatalogItemParentModel.stringToTags(tagString)
                            ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:826:37: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = parent.searchableText
                             ~~~~~~~^~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:101: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:91: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX185_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResult.items.count,{ $0 >= $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResult.items.count"),">=",.__fromSyntaxNode("2")),comments: ["Should find multiple red items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX211_8_6expectfMf_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults1.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults1.items.count"),">=",.__fromSyntaxNode("0")),comments: [.__line("// Depending on implementation, fuzzy matching might or might not work"),.__line("// At minimum, search should not crash with misspelled terms"),"Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX212_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults2.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults2.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX228_8_6expectfMf_.swift:1:49: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(multiWordResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("multiWordResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle multi-word searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX233_8_6expectfMf0_.swift:1:51: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(specialCharResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("specialCharResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle searches with special characters"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX242_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(emptyResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("emptyResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle empty searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX243_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(whitespaceResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("whitespaceResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle whitespace searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:86: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemSearchResult.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.CompleteInventoryItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:3:8: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
},item.manufacturer.lowercased(),expression: .__fromFunctionCall(.__fromSyntaxNode("savedItem.glassItem.natural_key"),"contains",(nil,.__fromSyntaxNode("item.manufacturer.lowercased()"))),comments: ["Natural key should contain manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX435_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 == $1() },100,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),"==",.__fromSyntaxNode("100")),comments: ["Search should work efficiently with 100 items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:70: warning: main actor-isolated property 'id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.id:2:25: note: property declared here
@MainActor internal let id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX42_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""rod""#, "rod")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX43_8_6expectfMf1_.swift:1:38: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should inherit manufacturer from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX44_8_6expectfMf2_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.tags,{ $0 == $1() },["red", "transparent"],expression: .__fromBinaryOperation(.__fromSyntaxNode("child.tags"),"==",.__fromSyntaxNode(#"["red", "transparent"]"#)),comments: ["Should inherit tags from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX45_8_6expectfMf3_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX46_8_6expectfMf4_.swift:1:35: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.code.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX66_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"frit",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""frit""#, "frit")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_subtype,{ $0 == $1() },"fine",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_subtype"),"==",.__fromStringLiteral(#""fine""#, "fine")),comments: ["Should set item subtype"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:89:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX112_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent2)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX136_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX185_12_6expectfMf_.swift:2:27: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try child.validate()
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:321: warning: main actor-isolated property 'item_type' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_type:2:25: note: property declared here
@MainActor internal let item_type: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:348: warning: main actor-isolated property 'item_subtype' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_subtype:2:25: note: property declared here
@MainActor internal let item_subtype: String?}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:43: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX414_8_6expectfMf_.swift:1:42: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.id"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Should have new parent-child fields populated"),"Should have legacy ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX415_8_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'id2' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.id2.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.id2.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have new ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX416_8_6expectfMf1_.swift:1:43: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.parent_id.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.parent_id.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX417_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.item_type.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.item_type"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should have item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX420_8_6expectfMf3_.swift:1:43: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.code,{ $0 == $1() },"LEGACY CORP-LGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.code"),"==",.__fromStringLiteral(#""LEGACY CORP-LGR-001""#, "LEGACY CORP-LGR-001")),comments: [.__line("// Should have proper code formatting"),"Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX36_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.id,{ $0 == $1() },parentId,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.id"),"==",.__fromSyntaxNode("parentId")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX37_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Red Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Red Glass""#, "Red Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX38_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BULLSEYE-0124",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BULLSEYE-0124""#, "BULLSEYE-0124")),comments: ["Should preserve base code"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX39_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX40_8_6expectfMf3_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"90",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""90""#, "90")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX41_8_6expectfMf4_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags,{ $0 == $1() },["red", "transparent", "coe90"],expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags"),"==",.__fromSyntaxNode(#"["red", "transparent", "coe90"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX53_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.id.description.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("parent.id.description"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX54_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("parent.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX66_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX69_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"104",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""104""#, "104")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX169_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX183_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX197_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX211_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX245_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX262_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX280_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX313_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX615_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [orphanedChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX639_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [inconsistentChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX725_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: ["Parents with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX726_8_6expectfMf0_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 != $1() },parent3,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"!=",.__fromSyntaxNode("parent3")),comments: ["Parents with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX752_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: [.__line("// Items should be equal"),"Parents with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX756_8_6expectfMf0_.swift:1:42: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parentSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("parentSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal parents"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX815_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:34:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:35:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            inventoryRepository: inventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:36:33: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            locationRepository: locationRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:37:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:42:36: warning: main actor-isolated conformance of 'MockItemMinimumRepository' to 'ItemMinimumRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemMinimumRepository: itemMinimumRepo,
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:43:37: warning: main actor-isolated conformance of 'MockShoppingListRepository' to 'ShoppingListRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            shoppingListRepository: shoppingListRepository,
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:44:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            inventoryRepository: inventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:45:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:46:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:47:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userTagsRepository: userTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:51:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:54:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:55:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userTagsRepository: userTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:117:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!item.glassItem.name.isEmpty, "All returned items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX116_12_6expectfMf0_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid names"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:117:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All returned items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:117:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All returned items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX116_12_6expectfMf0_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid names"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:117:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All returned items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:117:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All returned items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:118:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!item.glassItem.natural_key.isEmpty, "All returned items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX117_12_6expectfMf1_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid natural keys"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:118:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All returned items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:118:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All returned items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX117_12_6expectfMf1_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid natural keys"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:118:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All returned items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:118:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All returned items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:119:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!item.glassItem.manufacturer.isEmpty, "All returned items should have valid manufacturers")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX118_12_6expectfMf2_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.manufacturer.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.manufacturer"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:119:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.manufacturer.isEmpty, "All returned items should have valid manufacturers")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:119:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.manufacturer.isEmpty, "All returned items should have valid manufacturers")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX118_12_6expectfMf2_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.manufacturer.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.manufacturer"),.__fromSyntaxNode("isEmpty")), false),comments: ["All returned items should have valid manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:119:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.manufacturer.isEmpty, "All returned items should have valid manufacturers")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:119:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.manufacturer.isEmpty, "All returned items should have valid manufacturers")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:101: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:91: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:128:21: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item1 = GlassItemModel(natural_key: "bullseye-rg-001-0", name: "Red Glass A", sku: "RG-001", manufacturer: "Bullseye", coe: 90, mfr_status: "available")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:129:21: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item2 = GlassItemModel(natural_key: "spectrum-rg-001-0", name: "Red Glass B", sku: "RG-001", manufacturer: "Spectrum", coe: 96, mfr_status: "available")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:135:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(savedItem1.glassItem.natural_key.contains("bullseye"), "First item should have bullseye in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX134_8_6expectfMf_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem1.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:135:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key.contains("bullseye"), "First item should have bullseye in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:135:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key.contains("bullseye"), "First item should have bullseye in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX134_8_6expectfMf_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem1.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:135:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key.contains("bullseye"), "First item should have bullseye in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:135:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key.contains("bullseye"), "First item should have bullseye in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:136:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(savedItem2.glassItem.natural_key.contains("spectrum"), "Second item should have spectrum in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX135_8_6expectfMf0_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem2.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:136:9: note: in expansion of macro 'expect' here
        #expect(savedItem2.glassItem.natural_key.contains("spectrum"), "Second item should have spectrum in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:136:9: note: in expansion of macro 'expect' here
        #expect(savedItem2.glassItem.natural_key.contains("spectrum"), "Second item should have spectrum in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX135_8_6expectfMf0_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem2.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:136:9: note: in expansion of macro 'expect' here
        #expect(savedItem2.glassItem.natural_key.contains("spectrum"), "Second item should have spectrum in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:136:9: note: in expansion of macro 'expect' here
        #expect(savedItem2.glassItem.natural_key.contains("spectrum"), "Second item should have spectrum in natural key")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:166:27: warning: comparing non-optional value of type 'any Error' to 'nil' always returns true
            #expect(error != nil, "Service may reject duplicates")
                    ~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:148:13: warning: initialization of immutable value 'savedOriginal' was never used; consider replacing with assignment to '_' or removing it
        let savedOriginal = try await service.createGlassItem(originalItem, initialInventory: [], tags: [])
        ~~~~^~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:156:17: warning: initialization of immutable value 'savedDuplicate' was never used; consider replacing with assignment to '_' or removing it
            let savedDuplicate = try await service.createGlassItem(duplicateItem, initialInventory: [], tags: [])
            ~~~~^~~~~~~~~~~~~~
            _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:160:64: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated context
            let matchingItems = allItems.filter { $0.glassItem.natural_key.contains("bullseye-rg-001") }
                                                               ^
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:160:54: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated context
            let matchingItems = allItems.filter { $0.glassItem.natural_key.contains("bullseye-rg-001") }
                                                     ^
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:147:28: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let originalItem = GlassItemModel(natural_key: "bullseye-rg-001-0", name: "Original Red", sku: "RG-001", manufacturer: "Bullseye", coe: 90, mfr_status: "available")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:151:29: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let duplicateItem = GlassItemModel(natural_key: "bullseye-rg-001-1", name: "Updated Red", sku: "RG-001", manufacturer: "Bullseye", coe: 90, mfr_status: "available")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:189:65: warning: main actor-isolated property 'name' can not be referenced from a nonisolated context
        let resultNames = searchResult.items.map { $0.glassItem.name }
                                                                ^
Flameworker.GlassItemModel.name:2:25: note: property declared here
@MainActor internal let name: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:189:55: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated context
        let resultNames = searchResult.items.map { $0.glassItem.name }
                                                      ^
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:183:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let searchRequest = GlassItemSearchRequest(searchText: "Red")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX185_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResult.items.count,{ $0 >= $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResult.items.count"),">=",.__fromSyntaxNode("2")),comments: ["Should find multiple red items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:189:40: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let resultNames = searchResult.items.map { $0.glassItem.name }
                          ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:204:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let fuzzyRequest1 = GlassItemSearchRequest(searchText: "Bulleye") // Missing 's'
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:207:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let fuzzyRequest2 = GlassItemSearchRequest(searchText: "Spectrim") // Wrong last letter
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX211_8_6expectfMf_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults1.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults1.items.count"),">=",.__fromSyntaxNode("0")),comments: [.__line("// Depending on implementation, fuzzy matching might or might not work"),.__line("// At minimum, search should not crash with misspelled terms"),"Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX212_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults2.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults2.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:227:32: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let multiWordRequest = GlassItemSearchRequest(searchText: "Bullseye Red")
                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX228_8_6expectfMf_.swift:1:49: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(multiWordResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("multiWordResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle multi-word searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:232:34: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let specialCharRequest = GlassItemSearchRequest(searchText: "94-16")
                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX233_8_6expectfMf0_.swift:1:51: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(specialCharResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("specialCharResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle searches with special characters"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:237:28: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let emptyRequest = GlassItemSearchRequest(searchText: "")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:240:33: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let whitespaceRequest = GlassItemSearchRequest(searchText: "   ")
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX242_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(emptyResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("emptyResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle empty searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX243_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(whitespaceResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("whitespaceResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle whitespace searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:86: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemSearchResult.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.CompleteInventoryItemModel]}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:257:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let searchRequest = GlassItemSearchRequest(searchText: "Bullseye")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:295:31: warning: comparing non-optional value of type 'any Error' to 'nil' always returns true
                #expect(error != nil, "Service may reject invalid items based on business rules")
                        ~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:290:17: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
                #expect(!savedItem.glassItem.natural_key.isEmpty, "Saved item should have non-empty natural key")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX289_16_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Verify that natural keys are properly formatted"),"Saved item should have non-empty natural key"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:290:17: note: in expansion of macro 'expect' here
                #expect(!savedItem.glassItem.natural_key.isEmpty, "Saved item should have non-empty natural key")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:290:17: note: in expansion of macro 'expect' here
                #expect(!savedItem.glassItem.natural_key.isEmpty, "Saved item should have non-empty natural key")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX289_16_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Verify that natural keys are properly formatted"),"Saved item should have non-empty natural key"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:290:17: note: in expansion of macro 'expect' here
                #expect(!savedItem.glassItem.natural_key.isEmpty, "Saved item should have non-empty natural key")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:290:17: note: in expansion of macro 'expect' here
                #expect(!savedItem.glassItem.natural_key.isEmpty, "Saved item should have non-empty natural key")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:1:29: note: property access is 'async'
Testing.__checkFunctionCall(savedItem.glassItem.natural_key.self,calling: {
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:3:8: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
},item.manufacturer.lowercased(),expression: .__fromFunctionCall(.__fromSyntaxNode("savedItem.glassItem.natural_key"),"contains",(nil,.__fromSyntaxNode("item.manufacturer.lowercased()"))),comments: ["Natural key should contain manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:313:45: warning: main actor-isolated static method 'createNaturalKey(manufacturer:sku:sequence:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let naturalKey = GlassItemModel.createNaturalKey(manufacturer: manufacturer.lowercased(), sku: sku, sequence: 0)
                             ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:314:28: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let testItem = GlassItemModel(
                           ^~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:326:17: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
                #expect(savedItem.glassItem.manufacturer == manufacturer, "Manufacturer should be preserved")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX325_16_6expectfMf0_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(savedItem.glassItem.manufacturer,{ $0 == $1() },manufacturer,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem.glassItem.manufacturer"),"==",.__fromSyntaxNode("manufacturer")),comments: ["Manufacturer should be preserved"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:326:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.manufacturer == manufacturer, "Manufacturer should be preserved")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:326:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.manufacturer == manufacturer, "Manufacturer should be preserved")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX325_16_6expectfMf0_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(savedItem.glassItem.manufacturer,{ $0 == $1() },manufacturer,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem.glassItem.manufacturer"),"==",.__fromSyntaxNode("manufacturer")),comments: ["Manufacturer should be preserved"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:326:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.manufacturer == manufacturer, "Manufacturer should be preserved")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:326:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.manufacturer == manufacturer, "Manufacturer should be preserved")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:340:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(natural_key: "test-001-0", name: "Test Glass", sku: "001", manufacturer: "Test", coe: 90, mfr_status: "available")
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:345:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(!savedItem.glassItem.name.isEmpty, "Item should be created successfully")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX344_8_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// For now, just verify the item can be created"),"Item should be created successfully"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:345:9: note: in expansion of macro 'expect' here
        #expect(!savedItem.glassItem.name.isEmpty, "Item should be created successfully")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:345:9: note: in expansion of macro 'expect' here
        #expect(!savedItem.glassItem.name.isEmpty, "Item should be created successfully")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX344_8_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// For now, just verify the item can be created"),"Item should be created successfully"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:345:9: note: in expansion of macro 'expect' here
        #expect(!savedItem.glassItem.name.isEmpty, "Item should be created successfully")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:345:9: note: in expansion of macro 'expect' here
        #expect(!savedItem.glassItem.name.isEmpty, "Item should be created successfully")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:371:27: warning: comparing non-optional value of type 'any Error' to 'nil' always returns true
            #expect(error != nil, "Service should propagate appropriate errors")
                    ~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:363:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(natural_key: "test-001-0", name: "Test", sku: "001", manufacturer: "Test", coe: 90, mfr_status: "available")
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:367:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!savedItem.glassItem.natural_key.isEmpty, "Should create item successfully under normal conditions")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX366_12_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should create item successfully under normal conditions"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:367:13: note: in expansion of macro 'expect' here
            #expect(!savedItem.glassItem.natural_key.isEmpty, "Should create item successfully under normal conditions")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:367:13: note: in expansion of macro 'expect' here
            #expect(!savedItem.glassItem.natural_key.isEmpty, "Should create item successfully under normal conditions")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX366_12_6expectfMf_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(savedItem.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("savedItem.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should create item successfully under normal conditions"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:367:13: note: in expansion of macro 'expect' here
            #expect(!savedItem.glassItem.natural_key.isEmpty, "Should create item successfully under normal conditions")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:367:13: note: in expansion of macro 'expect' here
            #expect(!savedItem.glassItem.natural_key.isEmpty, "Should create item successfully under normal conditions")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:399:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!item.glassItem.natural_key.isEmpty, "All final items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX398_12_6expectfMf0_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["All final items should have valid natural keys"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:399:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All final items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:399:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All final items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX398_12_6expectfMf0_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.natural_key.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.natural_key"),.__fromSyntaxNode("isEmpty")), false),comments: ["All final items should have valid natural keys"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:399:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All final items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:399:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.natural_key.isEmpty, "All final items should have valid natural keys")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:400:13: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            #expect(!item.glassItem.name.isEmpty, "All final items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX399_12_6expectfMf1_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: ["All final items should have valid names"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:400:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All final items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:400:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All final items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX399_12_6expectfMf1_.swift:1:31: note: property access is 'async'
Testing.__checkPropertyAccess(item.glassItem.name.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.glassItem.name"),.__fromSyntaxNode("isEmpty")), false),comments: ["All final items should have valid names"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:400:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All final items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:400:13: note: in expansion of macro 'expect' here
            #expect(!item.glassItem.name.isEmpty, "All final items should have valid names")
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:439:62: warning: main actor-isolated property 'manufacturer' can not be referenced from a nonisolated context
        let filteredResults = allItems.filter { $0.glassItem.manufacturer.contains("Corp1") }
                                                             ^
Flameworker.GlassItemModel.manufacturer:2:25: note: property declared here
@MainActor internal let manufacturer: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:439:52: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated context
        let filteredResults = allItems.filter { $0.glassItem.manufacturer.contains("Corp1") }
                                                   ^
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:412:45: warning: main actor-isolated static method 'createNaturalKey(manufacturer:sku:sequence:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let naturalKey = GlassItemModel.createNaturalKey(manufacturer: "testcorp\(i % 10)", sku: String(format: "%03d", i), sequence: 0)
                             ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:413:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let item = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:434:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let searchRequest = GlassItemSearchRequest(searchText: "Test")
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX435_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 == $1() },100,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),"==",.__fromSyntaxNode("100")),comments: ["Search should work efficiently with 100 items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:70: warning: main actor-isolated property 'id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.id:2:25: note: property declared here
@MainActor internal let id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX41_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.parent_id,{ $0 == $1() },parent.id,expression: .__fromBinaryOperation(.__fromSyntaxNode("child.parent_id"),"==",.__fromSyntaxNode("parent.id")),comments: ["Child should reference parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(child.parent_id == parent.id, "Child should reference parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX42_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""rod""#, "rod")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:43:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "rod", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX43_8_6expectfMf1_.swift:1:38: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should inherit manufacturer from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(child.manufacturer == "Bullseye", "Should inherit manufacturer from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX44_8_6expectfMf2_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.tags,{ $0 == $1() },["red", "transparent"],expression: .__fromBinaryOperation(.__fromSyntaxNode("child.tags"),"==",.__fromSyntaxNode(#"["red", "transparent"]"#)),comments: ["Should inherit tags from parent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(child.tags == ["red", "transparent"], "Should inherit tags from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX45_8_6expectfMf3_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:46:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("Red Glass"), "Should construct name from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX46_8_6expectfMf4_.swift:1:35: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.code.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:47:9: note: in expansion of macro 'expect' here
        #expect(child.code.contains("BULLSEYE-0124"), "Should construct code from parent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX66_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_type,{ $0 == $1() },"frit",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_type"),"==",.__fromStringLiteral(#""frit""#, "frit")),comments: ["Should set item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(child.item_type == "frit", "Should set item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(child.item_subtype,{ $0 == $1() },"fine",expression: .__fromBinaryOperation(.__fromSyntaxNode("child.item_subtype"),"==",.__fromStringLiteral(#""fine""#, "fine")),comments: ["Should set item subtype"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(child.item_subtype == "fine", "Should set item subtype")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(child.name.self,calling: {
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(child.name.contains("fine"), "Should include subtype in name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:89:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Valid parent-child relationship should pass validation")
                ^~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX112_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent2)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:113:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX136_8_6expectfMf_.swift:2:23: warning: call to main actor-isolated instance method 'validateParentRelationship(with:)' in a synchronous nonisolated context
            try child.validateParentRelationship(with: parent)
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:137:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validateParentRelationship:2:26: note: calls to instance method 'validateParentRelationship(with:)' from outside of its actor context are implicitly asynchronous
@MainActor internal func validateParentRelationship(with parent: Flameworker.CatalogItemParentModel) throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX185_12_6expectfMf_.swift:2:27: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try child.validate()
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:186:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:321: warning: main actor-isolated property 'item_type' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_type:2:25: note: property declared here
@MainActor internal let item_type: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:348: warning: main actor-isolated property 'item_subtype' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.item_subtype:2:25: note: property declared here
@MainActor internal let item_subtype: String?}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX397_12_6expectfMf_.swift:1:43: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_type,{ $0 == $1() },testCase.expectedType,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_type"),"==",.__fromSyntaxNode("testCase.expectedType")),comments: ["Name '\(testCase.name)' should extract type '\(testCase.expectedType)' but got '\(legacyItem.item_type)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:398:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_type == testCase.expectedType,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX400_12_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'item_subtype' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.item_subtype,{ $0 == $1() },testCase.expectedSubtype,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.item_subtype"),"==",.__fromSyntaxNode("testCase.expectedSubtype")),comments: ["Name '\(testCase.name)' should extract subtype '\(testCase.expectedSubtype ?? "nil")' but got '\(legacyItem.item_subtype ?? "nil")'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:401:13: note: in expansion of macro 'expect' here
            #expect(legacyItem.item_subtype == testCase.expectedSubtype,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX414_8_6expectfMf_.swift:1:42: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.id"),.__fromSyntaxNode("isEmpty")), false),comments: [.__line("// Should have new parent-child fields populated"),"Should have legacy ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:415:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.id.isEmpty, "Should have legacy ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX415_8_6expectfMf0_.swift:1:43: warning: main actor-isolated property 'id2' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.id2.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.id2.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have new ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:416:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.id2.description.count > 0, "Should have new ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX416_8_6expectfMf1_.swift:1:43: warning: main actor-isolated property 'parent_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.parent_id.description.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.parent_id.description.count"),">",.__fromSyntaxNode("0")),comments: ["Should have parent ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:417:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.parent_id.description.count > 0, "Should have parent ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX417_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'item_type' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(legacyItem.item_type.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("legacyItem.item_type"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should have item type"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:418:9: note: in expansion of macro 'expect' here
        #expect(!legacyItem.item_type.isEmpty, "Should have item type")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemModelPhase1Testsswift_yoBAmfMX420_8_6expectfMf3_.swift:1:43: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(legacyItem.code,{ $0 == $1() },"LEGACY CORP-LGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("legacyItem.code"),"==",.__fromStringLiteral(#""LEGACY CORP-LGR-001""#, "LEGACY CORP-LGR-001")),comments: [.__line("// Should have proper code formatting"),"Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift:421:9: note: in expansion of macro 'expect' here
        #expect(legacyItem.code == "LEGACY CORP-LGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX36_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.id,{ $0 == $1() },parentId,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.id"),"==",.__fromSyntaxNode("parentId")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(parent.id == parentId, "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX37_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Red Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Red Glass""#, "Red Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Red Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX38_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BULLSEYE-0124",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BULLSEYE-0124""#, "BULLSEYE-0124")),comments: ["Should preserve base code"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BULLSEYE-0124", "Should preserve base code")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX39_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Bullseye",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Bullseye""#, "Bullseye")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Bullseye", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX40_8_6expectfMf3_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"90",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""90""#, "90")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "90", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX41_8_6expectfMf4_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags,{ $0 == $1() },["red", "transparent", "coe90"],expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags"),"==",.__fromSyntaxNode(#"["red", "transparent", "coe90"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(parent.tags == ["red", "transparent", "coe90"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX53_8_6expectfMf_.swift:1:38: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.id.description.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("parent.id.description"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(!parent.id.description.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX54_8_6expectfMf0_.swift:1:38: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(parent.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("parent.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:55:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX66_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'base_name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve base name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(parent.base_name == "Build Test Glass", "Should preserve base name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX67_8_6expectfMf0_.swift:1:39: warning: main actor-isolated property 'base_code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.base_code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.base_code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:68:9: note: in expansion of macro 'expect' here
        #expect(parent.base_code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX68_8_6expectfMf1_.swift:1:39: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:69:9: note: in expansion of macro 'expect' here
        #expect(parent.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX69_8_6expectfMf2_.swift:1:39: warning: main actor-isolated property 'coe' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.coe,{ $0 == $1() },"104",expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.coe"),"==",.__fromStringLiteral(#""104""#, "104")),comments: ["Should preserve COE"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:70:9: note: in expansion of macro 'expect' here
        #expect(parent.coe == "104", "Should preserve COE")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX169_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX183_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:184:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX197_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:198:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX211_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX245_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX262_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:263:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX280_12_6expectfMf_.swift:2:35: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
                try invalidParent.validate()
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:281:13: note: in expansion of macro 'expect' here
            #expect(throws: CatalogValidationError.self) {
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX313_8_6expectfMf_.swift:2:31: warning: call to main actor-isolated instance method 'validate()' in a synchronous nonisolated context
            try invalidParent.validate()
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:314:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validate:2:26: note: calls to instance method 'validate()' from outside of its actor context are implicitly asynchronous
@MainActor internal func validate() throws}
                         ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX615_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [orphanedChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:616:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX639_8_6expectfMf_.swift:2:40: warning: call to main actor-isolated static method 'validateParentChildRelationship(parent:children:)' in a synchronous nonisolated context
            try CatalogItemParentModel.validateParentChildRelationship(parent: parent, children: [inconsistentChild])
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:640:9: note: in expansion of macro 'expect' here
        #expect(throws: CatalogValidationError.self) {
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemParentModel.validateParentChildRelationship:2:33: note: calls to static method 'validateParentChildRelationship(parent:children:)' from outside of its actor context are implicitly asynchronous
@MainActor internal static func validateParentChildRelationship(parent: Flameworker.CatalogItemParentModel, children: [Flameworker.CatalogItemModel]) throws}
                                ^
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX725_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: ["Parents with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:726:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX726_8_6expectfMf0_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 != $1() },parent3,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"!=",.__fromSyntaxNode("parent3")),comments: ["Parents with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:727:9: note: in expansion of macro 'expect' here
        #expect(parent1 != parent3, "Parents with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX752_8_6expectfMf_.swift:1:45: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent1,{ $0 == $1() },parent2,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent1"),"==",.__fromSyntaxNode("parent2")),comments: [.__line("// Items should be equal"),"Parents with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:753:9: note: in expansion of macro 'expect' here
        #expect(parent1 == parent2, "Parents with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX756_8_6expectfMf0_.swift:1:42: warning: main actor-isolated conformance of 'CatalogItemParentModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parentSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("parentSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal parents"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:757:9: note: in expansion of macro 'expect' here
        #expect(parentSet.count == 1, "Set should deduplicate equal parents")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogItemParentModelTestsswift_yoBAmfMX815_8_6expectfMf_.swift:1:39: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(parent.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("parent.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift:816:9: note: in expansion of macro 'expect' here
        #expect(parent.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:101: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX138_8_6expectfMf1_.swift:1:91: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(savedItem1.glassItem.natural_key,{ $0 != $1() },savedItem2.glassItem.natural_key,expression: .__fromBinaryOperation(.__fromSyntaxNode("savedItem1.glassItem.natural_key"),"!=",.__fromSyntaxNode("savedItem2.glassItem.natural_key")),comments: [.__line("// Natural keys should be different due to manufacturer prefix"),"Natural keys should be different across manufacturers"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:139:9: note: in expansion of macro 'expect' here
        #expect(savedItem1.glassItem.natural_key != savedItem2.glassItem.natural_key, "Natural keys should be different across manufacturers")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX185_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResult.items.count,{ $0 >= $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResult.items.count"),">=",.__fromSyntaxNode("2")),comments: ["Should find multiple red items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:186:9: note: in expansion of macro 'expect' here
        #expect(searchResult.items.count >= 2, "Should find multiple red items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX211_8_6expectfMf_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults1.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults1.items.count"),">=",.__fromSyntaxNode("0")),comments: [.__line("// Depending on implementation, fuzzy matching might or might not work"),.__line("// At minimum, search should not crash with misspelled terms"),"Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:212:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults1.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX212_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(fuzzyResults2.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("fuzzyResults2.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Fuzzy search should not crash"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:213:9: note: in expansion of macro 'expect' here
        #expect(fuzzyResults2.items.count >= 0, "Fuzzy search should not crash")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX228_8_6expectfMf_.swift:1:49: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(multiWordResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("multiWordResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle multi-word searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:229:9: note: in expansion of macro 'expect' here
        #expect(multiWordResults.items.count >= 0, "Should handle multi-word searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX233_8_6expectfMf0_.swift:1:51: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(specialCharResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("specialCharResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle searches with special characters"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:234:9: note: in expansion of macro 'expect' here
        #expect(specialCharResults.items.count >= 0, "Should handle searches with special characters")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX242_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(emptyResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("emptyResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle empty searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(emptyResults.items.count >= 0, "Should handle empty searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX243_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(whitespaceResults.items.count,{ $0 >= $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("whitespaceResults.items.count"),">=",.__fromSyntaxNode("0")),comments: ["Should handle whitespace searches"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(whitespaceResults.items.count >= 0, "Should handle whitespace searches")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:86: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                     ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.GlassItemSearchResult.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.CompleteInventoryItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX268_8_6expectfMf_.swift:1:45: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(firstResults.items.count,{ $0 == $1() },secondResults.items.count,expression: .__fromBinaryOperation(.__fromSyntaxNode("firstResults.items.count"),"==",.__fromSyntaxNode("secondResults.items.count")),comments: [.__line("// Results should be identical"),"Search results should be consistent"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:269:9: note: in expansion of macro 'expect' here
        #expect(firstResults.items.count == secondResults.items.count, "Search results should be consistent")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX290_16_6expectfMf0_.swift:3:8: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
},item.manufacturer.lowercased(),expression: .__fromFunctionCall(.__fromSyntaxNode("savedItem.glassItem.natural_key"),"contains",(nil,.__fromSyntaxNode("item.manufacturer.lowercased()"))),comments: ["Natural key should contain manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
  ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:291:17: note: in expansion of macro 'expect' here
                #expect(savedItem.glassItem.natural_key.contains(item.manufacturer.lowercased()), "Natural key should contain manufacturer prefix")
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0038CatalogServiceAdvancedTestsswift_yoBAmfMX435_8_6expectfMf0_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 == $1() },100,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),"==",.__fromSyntaxNode("100")),comments: ["Search should work efficiently with 100 items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift:436:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count == 100, "Search should work efficiently with 100 items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 Compiling\ CatalogViewTests.swift,\ CoreDataLeakDiagnostic.swift,\ CoreDataPreventionSystem.swift,\ CoreFunctionalityTests.swift,\ DiagnosticTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ EndToEndWorkflowTests.swift,\ ErrorBoundaryTests.swift,\ ErrorHandlingTests.swift,\ FilterUtilitiesTests.swift,\ FixedBasicTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ MockRepositoryDebugTest.swift,\ AdvancedTestingTests.swift,\ BasicFunctionalityTests.swift,\ CatalogBuildModelTests.swift,\ CatalogBundleDebugViewTests.swift,\ CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
Failed frontend command:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/MockRepositoryDebugTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Tests/FlameworkerTests/MockUserImageRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Tests/RepositoryTests/FileSystemUserImageRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/AdvancedTestingUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/CollectionSafetyUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/NetworkSimulationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/StringValidationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Views/Shared/Helpers/UIStateManagers.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CrossEntityIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataInitializationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataModelValidationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NetworkSimulationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NewTestTemplate.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectGlassItemTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectReferenceUrlTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestConfiguration.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestDataSetup.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserSettingsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift -supplementary-output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/supplementaryOutputs-1 -target arm64-apple-ios26.0-simulator -module-can-import-version Darwin 347.0.12 0 -module-can-import-version Testing 1085 0 -disable-cross-import-overlay-search -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import Darwin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include/Darwin.swiftcrossimport/xlocale.swiftoverlay -swift-module-cross-import Testing /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/Testing.framework/Modules/Testing.swiftcrossimport/Foundation.swiftoverlay -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libFoundationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#FoundationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libObservationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#ObservationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libPreviewsMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#PreviewsMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftUIMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftUIMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing/libTestingMacros.dylib\#\#TestingMacros -disable-implicit-swift-modules -Xcc -fno-implicit-modules -Xcc -fno-implicit-module-maps -explicit-swift-module-map-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-dependencies-1.json -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -Isystem /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/Developer/Library/Frameworks -no-color-diagnostics -Xcc -fno-color-diagnostics -enable-testing -g -debug-info-format\=dwarf -dwarf-version\=5 -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -profile-generate -profile-coverage-mapping -swift-version 5 -enforce-exclusivity\=checked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests_const_extract_protocols.json -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -enable-anonymous-context-mangled-names -file-compilation-dir /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources -Xcc -DDEBUG\=1 -no-auto-bridging-header-chaining -module-name FlameworkerTests -frontend-parseable-output -disable-clang-spi -target-sdk-version 26.0 -target-sdk-name iphonesimulator26.0 -clang-target arm64-apple-ios26.0-simulator -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/MockRepositoryDebugTest.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/AdvancedTestingTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/BasicFunctionalityTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogBuildModelTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogBundleDebugViewTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogItemEntityTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/MockRepositoryDebugTest.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/AdvancedTestingTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/BasicFunctionalityTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogBuildModelTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogBundleDebugViewTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/CatalogItemEntityTests.o -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -index-system-modules

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:118:21: warning: immutable value 'i' was never used; consider replacing with '_' or removing it
                for i in 1...10 {
                    ^
                    _
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:51:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.ShoppingListService.init:2:21: note: 'init(itemMinimumRepository:shoppingListRepository:inventoryRepository:glassItemRepository:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(itemMinimumRepository: any Flameworker.ItemMinimumRepository, shoppingListRepository: any Flameworker.ShoppingListRepository, inventoryRepository: any Flameworker.InventoryRepository, glassItemRepository: any Flameworker.GlassItemRepository, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:58:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.CatalogService.init:2:21: note: 'init(glassItemRepository:inventoryTrackingService:shoppingListService:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(glassItemRepository: any Flameworker.GlassItemRepository, inventoryTrackingService: Flameworker.InventoryTrackingService, shoppingListService: Flameworker.ShoppingListService, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:39:40: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: repos.glassItem,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:40:40: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: repos.inventory,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:41:39: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            locationRepository: repos.location,
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:42:39: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: repos.itemTags
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:38:32: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryRepository:locationRepository:itemTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inventoryService = InventoryTrackingService(
                               ^~~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:45:38: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListRepository = MockShoppingListRepository()
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:87:37: warning: immutable value 'inventoryService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                                    ^~~~~~~~~~~~~~~~
                                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:99:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:145:21: warning: immutable value 'catalogService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, _) = try await createTestServices()
                    ^~~~~~~~~~~~~~
                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:174:48: warning: main actor-isolated property 'manufacturer' can not be referenced from a nonisolated context
                results = allItems.filter { $0.manufacturer == searchTerm }
                                               ^
Flameworker.GlassItemModel.manufacturer:2:25: note: property declared here
@MainActor internal let manufacturer: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:176:48: warning: main actor-isolated property 'name' can not be referenced from a nonisolated context
                results = allItems.filter { $0.name.localizedCaseInsensitiveContains(searchTerm) }
                                               ^
Flameworker.GlassItemModel.name:2:25: note: property declared here
@MainActor internal let name: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:178:48: warning: main actor-isolated property 'name' can not be referenced from a nonisolated context
                results = allItems.filter { $0.name.localizedCaseInsensitiveContains(searchTerm) }
                                               ^
Flameworker.GlassItemModel.name:2:25: note: property declared here
@MainActor internal let name: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:180:48: warning: main actor-isolated property 'mfr_status' can not be referenced from a nonisolated context
                results = allItems.filter { $0.mfr_status == searchTerm }
                                               ^
Flameworker.GlassItemModel.mfr_status:2:25: note: property declared here
@MainActor internal let mfr_status: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:183:52: warning: main actor-isolated property 'coe' can not be referenced from a nonisolated context
                    results = allItems.filter { $0.coe == coeValue }
                                                   ^
Flameworker.GlassItemModel.coe:2:25: note: property declared here
@MainActor internal let coe: Int32}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:203:21: warning: immutable value 'catalogService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                    ^~~~~~~~~~~~~~
                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:203:37: warning: immutable value 'inventoryService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                                    ^~~~~~~~~~~~~~~~
                                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:216:32: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let inventoryRecords = [
                               ^
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:217:13: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            InventoryModel(id: UUID(), item_natural_key: "bullseye-0001-0", type: "inventory", quantity: 10.0),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:218:13: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            InventoryModel(id: UUID(), item_natural_key: "bullseye-0002-0", type: "inventory", quantity: 5.5),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:219:13: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            InventoryModel(id: UUID(), item_natural_key: "spectrum-0001-0", type: "buy", quantity: 3.0),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:220:13: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            InventoryModel(id: UUID(), item_natural_key: "spectrum-0002-0", type: "sell", quantity: 2.0),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:221:13: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            InventoryModel(id: UUID(), item_natural_key: "kokomo-0001-0", type: "inventory", quantity: 8.25)
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:241:21: warning: immutable value 'catalogService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                    ^~~~~~~~~~~~~~
                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:241:37: warning: immutable value 'inventoryService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                                    ^~~~~~~~~~~~~~~~
                                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:275:37: warning: immutable value 'inventoryService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, inventoryService) = try await createTestServices()
                                    ^~~~~~~~~~~~~~~~
                                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:289:29: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            let inventory = InventoryModel(
                            ^~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:289:29: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
            let inventory = InventoryModel(
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:291:35: note: property access is 'async'
                item_natural_key: item.natural_key,
                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:326:21: warning: immutable value 'catalogService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, _) = try await createTestServices()
                    ^~~~~~~~~~~~~~
                    _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:341:78: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                        print("⚠️  Concurrent creation failed for \(item.natural_key): \(error)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift:359:21: warning: immutable value 'catalogService' was never used; consider replacing with '_' or removing it
        let (repos, catalogService, _) = try await createTestServices()
                    ^~~~~~~~~~~~~~
                    _
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:27:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:27:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:46:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:46:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:59:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:59:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:81:45: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:100:45: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:131:45: warning: main actor-isolated static method 'constructFullCode(manufacturer:code:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let fullCode = CatalogItemModel.constructFullCode(
                           ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:150:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
            let item = CatalogItemModel(
                       ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:150:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let item = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:165:21: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item1 = CatalogItemModel(
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:173:21: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item2 = CatalogItemModel(
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:165:21: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item1 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:173:21: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let item2 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:173:21: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let item2 = CatalogItemModel(
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:174:17: note: property access is 'async'
            id: item1.id, // Same ID
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:182:43: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemModel.hasChanges(existing: item1, new: item2)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:188:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let existing = CatalogItemModel(
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:194:23: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:188:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:194:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemModel(
                      ^~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:194:23: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:195:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:201:43: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:207:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let existing = CatalogItemModel(
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:213:23: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:207:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:213:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemModel(
                      ^~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:213:23: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:214:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:220:43: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:227:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let existing = CatalogItemModel(
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:234:23: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:227:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:234:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemModel(
                      ^~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:234:23: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:235:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:242:43: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:249:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let existing = CatalogItemModel(
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:257:23: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:249:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:257:23: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let updated = CatalogItemModel(
                      ^~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:257:23: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
        let updated = CatalogItemModel(
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:258:17: note: property access is 'async'
            id: existing.id,
                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:264:43: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let hasChanges = CatalogItemModel.hasChanges(existing: existing, new: updated)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:270:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let existing = CatalogItemModel(
                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:296:27: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
            let updated = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:270:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let existing = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:296:27: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
            let updated = CatalogItemModel(
                          ^~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:296:27: note: calls to initializer 'init(id:name:rawCode:manufacturer:tags:units:)' from outside of its actor context are implicitly asynchronous
            let updated = CatalogItemModel(
                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:297:21: note: property access is 'async'
                id: existing.id,
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:304:47: warning: main actor-isolated static method 'hasChanges(existing:new:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let hasChanges = CatalogItemModel.hasChanges(existing: existing, new: updated)
                             ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:327:43: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let result = CatalogItemModel.tagsToString(testCase.tags)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:345:43: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let result = CatalogItemModel.stringToTags(testCase.string)
                         ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:355:39: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let string = CatalogItemModel.tagsToString(originalTags)
                     ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:356:46: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedTags = CatalogItemModel.stringToTags(string)
                            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:365:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:365:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:372:35: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = item.searchableText
                             ~~~~~^~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:390:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:390:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:397:35: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = item.searchableText
                             ~~~~~^~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:415:21: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item1 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:432:21: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item2 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:449:21: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item3 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:514:46: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
        let itemSet: Set<CatalogItemModel> = [item1, item2]
                                             ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:476:21: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item1 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:493:21: warning: main actor-isolated initializer 'init(id:id2:parent_id:item_type:item_subtype:stock_type:manufacturer_url:image_path:image_url:name:code:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item2 = CatalogItemModel(
                    ^~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:547:24: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
            let item = CatalogItemModel(
                       ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:547:24: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let item = CatalogItemModel(
                       ^~~~~~~~~~~~~~~~~
                       await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:590:28: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
                let item = CatalogItemModel(
                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:600:29: warning: '#expect(_:_:)' will always fail here; use 'Bool(false)' to silence this warning (from macro 'expect')
                    #expect(false, "Edge case expected to fail but succeeded: \(testCase.name)")
                            ^~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:605:29: warning: '#expect(_:_:)' will always fail here; use 'Bool(false)' to silence this warning (from macro 'expect')
                    #expect(false, "Edge case should succeed but failed: \(testCase.name) - \(error)")
                            ^~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:607:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Edge case correctly failed: \(testCase.name)")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:603:15: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
            } catch {
              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:590:28: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                let item = CatalogItemModel(
                           ^~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:618:20: warning: 'init(id:name:rawCode:manufacturer:tags:units:)' is deprecated: Use parent-child initializer instead
        let item = CatalogItemModel(
                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:618:20: warning: main actor-isolated initializer 'init(id:name:rawCode:manufacturer:tags:units:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = CatalogItemModel(
                   ^~~~~~~~~~~~~~~~~
                   await 
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:628:42: warning: main actor-isolated static method 'tagsToString' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let tagString = CatalogItemModel.tagsToString(largeTags)
                        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:629:46: warning: main actor-isolated static method 'stringToTags' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedTags = CatalogItemModel.stringToTags(tagString)
                            ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:635:35: warning: main actor-isolated property 'searchableText' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let searchableText = item.searchableText
                             ~~~~~^~~~~~~~~~~~~~
                             await 

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift:46:13: warning: initialization of immutable value 'debugView' was never used; consider replacing with assignment to '_' or removing it
        let debugView = CatalogBundleDebugView(bundleContents: testBinding)
        ~~~~^~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift:344:13: warning: initialization of immutable value 'debugView' was never used; consider replacing with assignment to '_' or removing it
        let debugView = CatalogBundleDebugView(bundleContents: binding)
        ~~~~^~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift:360:13: warning: initialization of immutable value 'debugView' was never used; consider replacing with assignment to '_' or removing it
        let debugView = CatalogBundleDebugView(bundleContents: binding)
        ~~~~^~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift:389:13: warning: initialization of immutable value 'debugView' was never used; consider replacing with assignment to '_' or removing it
        let debugView = CatalogBundleDebugView(bundleContents: binding)
        ~~~~^~~~~~~~~
        _

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:37:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:46:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:57:57: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("📝 Created test item model: \(testItem.natural_key)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:62:55: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ createItem returned: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:35: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                             ~~~~~^~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:84:49: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
                print("  - \(item.name) (\(item.natural_key))")
                                           ~~~~~^~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:95:75: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("✅ fetchItem by natural key returned: \(fetchedByKey!.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:120:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift:133:48: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        print("✅ Item created: \(createdItem.name)")
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:54:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Concurrent UserDefaults operations should complete safely")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:143:29: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                    #expect(true, "Operation was properly cancelled with AsyncOperationError")
                            ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift:148:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Operation was properly cancelled with CancellationError")
                        ^~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX35_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.id,{ $0 == $1() },"test-id",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.id"),"==",.__fromStringLiteral(#""test-id""#, "test-id")),comments: ["Should preserve provided ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:36:9: note: in expansion of macro 'expect' here
        #expect(item.id == "test-id", "Should preserve provided ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX36_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Test Glass Rod",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Test Glass Rod""#, "Test Glass Rod")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:37:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Test Glass Rod", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX37_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"TEST CORP-TGR-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""TEST CORP-TGR-001""#, "TEST CORP-TGR-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.code == "TEST CORP-TGR-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX38_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Test Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Test Corp""#, "Test Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Test Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX39_8_6expectfMf3_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags,{ $0 == $1() },["red", "rod"],expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags"),"==",.__fromSyntaxNode(#"["red", "rod"]"#)),comments: ["Should preserve tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.tags == ["red", "rod"], "Should preserve tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX40_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },5,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("5")),comments: ["Should preserve units"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.units == 5, "Should preserve units")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX51_8_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Should generate UUID for ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:52:9: note: in expansion of macro 'expect' here
        #expect(!item.id.isEmpty, "Should generate UUID for ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX52_8_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.tags.self,getting: { $0.isEmpty },expression: .__fromPropertyAccess(.__fromSyntaxNode("item.tags"),.__fromSyntaxNode("isEmpty")),comments: ["Should default to empty tags"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:53:9: note: in expansion of macro 'expect' here
        #expect(item.tags.isEmpty, "Should default to empty tags")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX53_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'units' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.units,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.units"),"==",.__fromSyntaxNode("1")),comments: ["Should default to 1 unit"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:54:9: note: in expansion of macro 'expect' here
        #expect(item.units == 1, "Should default to 1 unit")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX64_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.name,{ $0 == $1() },"Build Test Glass",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.name"),"==",.__fromStringLiteral(#""Build Test Glass""#, "Build Test Glass")),comments: ["Should preserve name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:65:9: note: in expansion of macro 'expect' here
        #expect(item.name == "Build Test Glass", "Should preserve name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX65_8_6expectfMf0_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },"BUILD CORP-BTG-001",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromStringLiteral(#""BUILD CORP-BTG-001""#, "BUILD CORP-BTG-001")),comments: ["Should format code with manufacturer prefix"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:66:9: note: in expansion of macro 'expect' here
        #expect(item.code == "BUILD CORP-BTG-001", "Should format code with manufacturer prefix")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX66_8_6expectfMf1_.swift:1:37: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.manufacturer,{ $0 == $1() },"Build Corp",expression: .__fromBinaryOperation(.__fromSyntaxNode("item.manufacturer"),"==",.__fromStringLiteral(#""Build Corp""#, "Build Corp")),comments: ["Should preserve manufacturer"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:67:9: note: in expansion of macro 'expect' here
        #expect(item.manufacturer == "Build Corp", "Should preserve manufacturer")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:323: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX155_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Model construction should produce code '\(testCase.expectedCode)' for raw code '\(testCase.rawCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:156:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX465_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: ["Items with same properties should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:466:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with same properties should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX466_8_6expectfMf0_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 != $1() },item3,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"!=",.__fromSyntaxNode("item3")),comments: ["Items with different IDs should not be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:467:9: note: in expansion of macro 'expect' here
        #expect(item1 != item3, "Items with different IDs should not be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX510_8_6expectfMf_.swift:1:43: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Equatable' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item1,{ $0 == $1() },item2,expression: .__fromBinaryOperation(.__fromSyntaxNode("item1"),"==",.__fromSyntaxNode("item2")),comments: [.__line("// Items should be equal"),"Items with identical data should be equal"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:511:9: note: in expansion of macro 'expect' here
        #expect(item1 == item2, "Items with identical data should be equal")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX514_8_6expectfMf0_.swift:1:40: warning: main actor-isolated conformance of 'CatalogItemModel' to 'Hashable' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(itemSet.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("itemSet.count"),"==",.__fromSyntaxNode("1")),comments: ["Set should deduplicate equal items"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:515:9: note: in expansion of macro 'expect' here
        #expect(itemSet.count == 1, "Set should deduplicate equal items")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:389: warning: main actor-isolated property 'code' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                                                                                                                                                                                                                                                                                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogItemModel.code:2:25: note: property declared here
@MainActor internal let code: String}
                        ^
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX552_12_6expectfMf_.swift:1:37: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.code,{ $0 == $1() },testCase.expectedCode,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.code"),"==",.__fromSyntaxNode("testCase.expectedCode")),comments: ["Real-world scenario: '\(testCase.name)' with raw code '\(testCase.rawCode)' and manufacturer '\(testCase.manufacturer)' should produce code '\(testCase.expectedCode)' but got '\(item.code)'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:553:13: note: in expansion of macro 'expect' here
            #expect(item.code == testCase.expectedCode,
            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX596_20_6expectfMf_.swift:1:36: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.id.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.id"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should succeed: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:597:21: note: in expansion of macro 'expect' here
                    #expect(!item.id.isEmpty, "Edge case should succeed: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX597_20_6expectfMf0_.swift:1:36: warning: main actor-isolated property 'code' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkPropertyAccess(item.code.self,getting: { $0.isEmpty },expression: .__fromNegation(.__fromPropertyAccess(.__fromSyntaxNode("item.code"),.__fromSyntaxNode("isEmpty")), false),comments: ["Edge case should produce valid code: \(testCase.name)"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:598:21: note: in expansion of macro 'expect' here
                    #expect(!item.code.isEmpty, "Edge case should produce valid code: \(testCase.name)")
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033CatalogBuildModelTestsswift_DbGHjfMX624_8_6expectfMf_.swift:1:37: warning: main actor-isolated property 'tags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.tags.count,{ $0 == $1() },1000,expression: .__fromBinaryOperation(.__fromSyntaxNode("item.tags.count"),"==",.__fromSyntaxNode("1000")),comments: ["Should handle large tag arrays"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift:625:9: note: in expansion of macro 'expect' here
        #expect(item.tags.count == 1000, "Should handle large tag arrays")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 Compiling\ ProjectReferenceUrlTests.swift,\ RepositoryIdentityTest.swift,\ SearchTextParserTests.swift,\ SearchUtilitiesConfigurationTests.swift,\ SearchUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectReferenceUrlTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectReferenceUrlTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ InventoryViewComponentsTests.swift,\ InventoryViewModelTests.swift,\ JSONDataLoaderTests.swift,\ ProjectGlassItemTests.swift,\ ProjectModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectGlassItemTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectGlassItemTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftEmitModule normal arm64 Emitting\ module\ for\ FlameworkerTests (in target 'FlameworkerTests' from project 'Flameworker')

EmitSwiftModule normal arm64 (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ TestFixes.swift,\ UIStateManagementTests.swift,\ UserNotesEditorTests.swift,\ UserSettingsTests.swift,\ UserTagsIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserSettingsTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift:167:10: warning: non-Sendable parameter type 'NSPredicate?' cannot be sent from caller of protocol requirement 'fetchItems(matching:)' into main actor-isolated implementation; this is an error in the Swift 6 language mode
    func fetchItems(matching predicate: NSPredicate?) async throws -> [GlassItemModel] {
         ^
Swift.Optional:1:21: note: generic enum 'Optional' does not conform to the 'Sendable' protocol
@frozen public enum Optional<Wrapped> : ~Copyable, ~Escapable where Wrapped : ~Copyable, Wrapped : ~Escapable {
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift:248:10: warning: non-Sendable parameter type 'NSPredicate?' cannot be sent from caller of protocol requirement 'fetchInventory(matching:)' into main actor-isolated implementation; this is an error in the Swift 6 language mode
    func fetchInventory(matching predicate: NSPredicate?) async throws -> [InventoryModel] {
         ^
Swift.Optional:1:21: note: generic enum 'Optional' does not conform to the 'Sendable' protocol
@frozen public enum Optional<Wrapped> : ~Copyable, ~Escapable where Wrapped : ~Copyable, Wrapped : ~Escapable {
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift:419:10: warning: non-Sendable parameter type 'NSPredicate?' cannot be sent from caller of protocol requirement 'fetchLocations(matching:)' into main actor-isolated implementation; this is an error in the Swift 6 language mode
    func fetchLocations(matching predicate: NSPredicate?) async throws -> [LocationModel] {
         ^
Swift.Optional:1:21: note: generic enum 'Optional' does not conform to the 'Sendable' protocol
@frozen public enum Optional<Wrapped> : ~Copyable, ~Escapable where Wrapped : ~Copyable, Wrapped : ~Escapable {
                    ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift:36:22: warning: result of call to 'startLoading(operationName:)' is unused
        stateManager.startLoading(operationName: "Test Operation")
                     ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift:79:22: warning: result of call to 'startLoading(operationName:)' is unused
        stateManager.startLoading(operationName: "Failing Operation")
                     ^           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:52:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should accept CompleteInventoryItemModel")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:48:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: mockRepo
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:84:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should accept repository via dependency injection")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:80:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: mockRepo
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:114:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should support creating new notes")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:110:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:146:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should support editing existing notes")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:142:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: mockRepo
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:176:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should handle long notes input")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:172:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:206:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should handle multiline notes")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:202:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:236:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should validate notes before saving")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:232:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:266:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should handle special characters")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:262:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:296:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should handle save errors gracefully")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:292:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:326:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should support canceling without saving")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:322:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:356:24: warning: comparing non-optional value of type 'UserNotesEditor' to 'nil' always returns true
        #expect(editor != nil, "UserNotesEditor should display item information")
                ~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift:352:34: warning: main actor-isolated conformance of 'MockUserNotesRepository' to 'UserNotesRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userNotesRepository: MockUserNotesRepository()
                                 ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserSettingsTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:20:25: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItem = GlassItemModel(
                        ^~~~~~~~~~~~~~~
                        await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:54:25: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItem = GlassItemModel(
                        ^~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:63:32: warning: main actor-isolated initializer 'init(itemNaturalKey:type:currentQuantity:minimumQuantity:store:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListItem = ShoppingListItemModel(
                               ^~~~~~~~~~~~~~~~~~~~~~
                               await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:93:13: warning: initialization of immutable value 'catalogService' was never used; consider replacing with assignment to '_' or removing it
        let catalogService = RepositoryFactory.createCatalogService()
        ~~~~^~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:92:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:93:48: warning: main actor-isolated static method 'createCatalogService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = RepositoryFactory.createCatalogService()
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:104:13: warning: initialization of immutable value 'shoppingListService' was never used; consider replacing with assignment to '_' or removing it
        let shoppingListService = RepositoryFactory.createShoppingListService()
        ~~~~^~~~~~~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:103:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:104:53: warning: main actor-isolated static method 'createShoppingListService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListService = RepositoryFactory.createShoppingListService()
                                  ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:145:13: warning: initialization of immutable value 'catalogService' was never used; consider replacing with assignment to '_' or removing it
        let catalogService = RepositoryFactory.createCatalogService()
        ~~~~^~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:144:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:145:48: warning: main actor-isolated static method 'createCatalogService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = RepositoryFactory.createCatalogService()
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
                             await 

SwiftCompile normal arm64 Compiling\ ServiceCoordinationTests.swift,\ ServiceValidationEnhancedTests.swift,\ ShoppingListOptionsViewTests.swift,\ ShoppingListRepositoryTests.swift,\ ShoppingListServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ IntegrationTests.swift,\ InventoryDetailViewUserNotesTests.swift,\ InventoryItemDetailViewTests.swift,\ InventorySearchSuggestionsTests.swift,\ InventoryServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ ValidationUtilitiesTests.swift,\ ViewRepositoryIntegrationTests.swift,\ ViewStateManagementTests.swift,\ ViewUtilitiesTests.swift,\ WeightUnitTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
Failed frontend command:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/MockRepositoryDebugTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Tests/FlameworkerTests/MockUserImageRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Tests/RepositoryTests/FileSystemUserImageRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/AdvancedTestingUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/CollectionSafetyUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/NetworkSimulationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/StringValidationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Views/Shared/Helpers/UIStateManagers.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CrossEntityIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataInitializationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataModelValidationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NetworkSimulationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NewTestTemplate.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectGlassItemTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ProjectReferenceUrlTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestConfiguration.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestDataSetup.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserSettingsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift -supplementary-output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/supplementaryOutputs-11 -target arm64-apple-ios26.0-simulator -module-can-import-version Darwin 347.0.12 0 -module-can-import-version Testing 1085 0 -disable-cross-import-overlay-search -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import Darwin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include/Darwin.swiftcrossimport/xlocale.swiftoverlay -swift-module-cross-import Testing /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/Testing.framework/Modules/Testing.swiftcrossimport/Foundation.swiftoverlay -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libFoundationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#FoundationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libObservationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#ObservationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libPreviewsMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#PreviewsMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftUIMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftUIMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing/libTestingMacros.dylib\#\#TestingMacros -disable-implicit-swift-modules -Xcc -fno-implicit-modules -Xcc -fno-implicit-module-maps -explicit-swift-module-map-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-dependencies-1.json -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -Isystem /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/Developer/Library/Frameworks -no-color-diagnostics -Xcc -fno-color-diagnostics -enable-testing -g -debug-info-format\=dwarf -dwarf-version\=5 -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -profile-generate -profile-coverage-mapping -swift-version 5 -enforce-exclusivity\=checked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests_const_extract_protocols.json -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -enable-anonymous-context-mangled-names -file-compilation-dir /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources -Xcc -DDEBUG\=1 -no-auto-bridging-header-chaining -module-name FlameworkerTests -frontend-parseable-output -disable-clang-spi -target-sdk-version 26.0 -target-sdk-name iphonesimulator26.0 -clang-target arm64-apple-ios26.0-simulator -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ValidationUtilitiesTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewRepositoryIntegrationTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewStateManagementTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewUtilitiesTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/WeightUnitTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ValidationUtilitiesTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewRepositoryIntegrationTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewStateManagementTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ViewUtilitiesTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/WeightUnitTests.o -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -index-system-modules

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:63:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:81:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:112:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:143:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:172:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:182:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:211:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX165_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'inventory' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventory.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.inventory.count"),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX166_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'totalQuantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.totalQuantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.totalQuantity"),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX167_8_6expectfMf2_.swift:1:45: warning: main actor-isolated property 'inventoryByType' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventoryByType["rod"],{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"completeItem.inventoryByType["rod"]"#),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX451_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.first?.title,{ $0 == $1() },"Component 1",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.first?.title"),"==",.__fromStringLiteral(#""Component 1""#, "Component 1")),comments: [.__line("// Test component properties are preserved under pressure"),"First component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX452_8_6expectfMf3_.swift:1:49: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.last?.title,{ $0 == $1() },"Component \(componentCount)",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.last?.title"),"==",.__fromSyntaxNode(#""Component \(componentCount)""#)),comments: ["Last component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX25_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.displayName,{ $0 == $1() },"Pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.displayName"),"==",.__fromStringLiteral(#""Pounds""#, "Pounds")),comments: ["Pounds should display as 'Pounds'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX26_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.displayName,{ $0 == $1() },"Kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.displayName"),"==",.__fromStringLiteral(#""Kilograms""#, "Kilograms")),comments: ["Kilograms should display as 'Kilograms'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX31_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.symbol,{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.symbol"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should have 'lb' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX32_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.symbol,{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.symbol"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should have 'kg' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX37_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX38_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX43_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.id,{ $0 == $1() },"pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.id"),"==",.__fromStringLiteral(#""pounds""#, "pounds")),comments: ["Pounds ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX44_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.id,{ $0 == $1() },"kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.id"),"==",.__fromStringLiteral(#""kilograms""#, "kilograms")),comments: ["Kilograms ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX95_8_6expectfMf_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0, to: .kilograms),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0, to: .kilograms)"),"==",.__fromSyntaxNode("0")),comments: [.__line("// Test zero conversion"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX96_8_6expectfMf0_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0, to: .pounds),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0, to: .pounds)"),"==",.__fromSyntaxNode("0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:108: warning: main actor-isolated property 'displayName' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogUnits.displayName:2:25: note: property declared here
@MainActor internal var displayName: String { get }}
                        ^
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX162_8_6expectfMf_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .pounds),{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .pounds)"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should display as lb"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX163_8_6expectfMf0_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .kilograms),{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .kilograms)"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should display as kg"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX164_8_6expectfMf1_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .shorts),{ $0 == $1() },"Shorts",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .shorts)"),"==",.__fromStringLiteral(#""Shorts""#, "Shorts")),comments: ["Shorts should display as Shorts"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX237_8_6expectfMf1_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0.0, to: .kilograms),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0.0, to: .kilograms)"),"==",.__fromSyntaxNode("0.0")),comments: [.__line("// Test with zero"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX238_8_6expectfMf2_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0.0, to: .pounds),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0.0, to: .pounds)"),"==",.__fromSyntaxNode("0.0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:63:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:81:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:112:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:143:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:172:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:182:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:211:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:142:25: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItem = GlassItemModel(
                        ^~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:151:29: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let inventoryItem = InventoryModel(
                            ^~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:151:29: note: calls to initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' from outside of its actor context are implicitly asynchronous
        let inventoryItem = InventoryModel(
                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:152:31: note: property access is 'async'
            item_natural_key: glassItem.natural_key,
                              ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:165:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(completeItem.glassItem.natural_key == "bullseye-test-001-0")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX164_8_6expectfMf_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(completeItem.glassItem.natural_key,{ $0 == $1() },"bullseye-test-001-0",expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.glassItem.natural_key"),"==",.__fromStringLiteral(#""bullseye-test-001-0""#, "bullseye-test-001-0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(completeItem.glassItem.natural_key == "bullseye-test-001-0")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(completeItem.glassItem.natural_key == "bullseye-test-001-0")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX164_8_6expectfMf_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(completeItem.glassItem.natural_key,{ $0 == $1() },"bullseye-test-001-0",expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.glassItem.natural_key"),"==",.__fromStringLiteral(#""bullseye-test-001-0""#, "bullseye-test-001-0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(completeItem.glassItem.natural_key == "bullseye-test-001-0")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(completeItem.glassItem.natural_key == "bullseye-test-001-0")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX165_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'inventory' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventory.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.inventory.count"),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX166_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'totalQuantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.totalQuantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.totalQuantity"),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX167_8_6expectfMf2_.swift:1:45: warning: main actor-isolated property 'inventoryByType' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventoryByType["rod"],{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"completeItem.inventoryByType["rod"]"#),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX451_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.first?.title,{ $0 == $1() },"Component 1",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.first?.title"),"==",.__fromStringLiteral(#""Component 1""#, "Component 1")),comments: [.__line("// Test component properties are preserved under pressure"),"First component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX452_8_6expectfMf3_.swift:1:49: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.last?.title,{ $0 == $1() },"Component \(componentCount)",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.last?.title"),"==",.__fromSyntaxNode(#""Component \(componentCount)""#)),comments: ["Last component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX25_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.displayName,{ $0 == $1() },"Pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.displayName"),"==",.__fromStringLiteral(#""Pounds""#, "Pounds")),comments: ["Pounds should display as 'Pounds'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX26_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.displayName,{ $0 == $1() },"Kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.displayName"),"==",.__fromStringLiteral(#""Kilograms""#, "Kilograms")),comments: ["Kilograms should display as 'Kilograms'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX31_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.symbol,{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.symbol"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should have 'lb' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX32_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.symbol,{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.symbol"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should have 'kg' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX37_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX38_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX43_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.id,{ $0 == $1() },"pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.id"),"==",.__fromStringLiteral(#""pounds""#, "pounds")),comments: ["Pounds ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX44_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.id,{ $0 == $1() },"kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.id"),"==",.__fromStringLiteral(#""kilograms""#, "kilograms")),comments: ["Kilograms ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX95_8_6expectfMf_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0, to: .kilograms),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0, to: .kilograms)"),"==",.__fromSyntaxNode("0")),comments: [.__line("// Test zero conversion"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX96_8_6expectfMf0_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0, to: .pounds),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0, to: .pounds)"),"==",.__fromSyntaxNode("0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:108: warning: main actor-isolated property 'displayName' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogUnits.displayName:2:25: note: property declared here
@MainActor internal var displayName: String { get }}
                        ^
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX162_8_6expectfMf_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .pounds),{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .pounds)"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should display as lb"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX163_8_6expectfMf0_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .kilograms),{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .kilograms)"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should display as kg"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX164_8_6expectfMf1_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .shorts),{ $0 == $1() },"Shorts",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .shorts)"),"==",.__fromStringLiteral(#""Shorts""#, "Shorts")),comments: ["Shorts should display as Shorts"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX237_8_6expectfMf1_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0.0, to: .kilograms),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0.0, to: .kilograms)"),"==",.__fromSyntaxNode("0.0")),comments: [.__line("// Test with zero"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX238_8_6expectfMf2_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0.0, to: .pounds),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0.0, to: .pounds)"),"==",.__fromSyntaxNode("0.0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:63:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:81:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:112:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:143:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:172:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:182:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:211:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX165_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'inventory' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventory.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.inventory.count"),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX166_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'totalQuantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.totalQuantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.totalQuantity"),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX167_8_6expectfMf2_.swift:1:45: warning: main actor-isolated property 'inventoryByType' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventoryByType["rod"],{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"completeItem.inventoryByType["rod"]"#),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:46:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.ShoppingListService.init:2:21: note: 'init(itemMinimumRepository:shoppingListRepository:inventoryRepository:glassItemRepository:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(itemMinimumRepository: any Flameworker.ItemMinimumRepository, shoppingListRepository: any Flameworker.ShoppingListRepository, inventoryRepository: any Flameworker.InventoryRepository, glassItemRepository: any Flameworker.GlassItemRepository, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:53:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.CatalogService.init:2:21: note: 'init(glassItemRepository:inventoryTrackingService:shoppingListService:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(glassItemRepository: any Flameworker.GlassItemRepository, inventoryTrackingService: Flameworker.InventoryTrackingService, shoppingListService: Flameworker.ShoppingListService, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:34:40: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: repos.glassItem,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:35:40: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: repos.inventory,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:36:39: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            locationRepository: repos.location,
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:37:39: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: repos.itemTags
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:33:40: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryRepository:locationRepository:itemTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inventoryTrackingService = InventoryTrackingService(
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:40:38: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListRepository = MockShoppingListRepository()
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:75:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.ShoppingListService.init:2:21: note: 'init(itemMinimumRepository:shoppingListRepository:inventoryRepository:glassItemRepository:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(itemMinimumRepository: any Flameworker.ItemMinimumRepository, shoppingListRepository: any Flameworker.ShoppingListRepository, inventoryRepository: any Flameworker.InventoryRepository, glassItemRepository: any Flameworker.GlassItemRepository, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:82:47: error: missing argument for parameter 'userTagsRepository' in call
            itemTagsRepository: repos.itemTags
                                              ^
                                              , userTagsRepository: <#any UserTagsRepository#>
Flameworker.CatalogService.init:2:21: note: 'init(glassItemRepository:inventoryTrackingService:shoppingListService:itemTagsRepository:userTagsRepository:)' declared here
@MainActor internal init(glassItemRepository: any Flameworker.GlassItemRepository, inventoryTrackingService: Flameworker.InventoryTrackingService, shoppingListService: Flameworker.ShoppingListService, itemTagsRepository: any Flameworker.ItemTagsRepository, userTagsRepository: any Flameworker.UserTagsRepository)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:63:40: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            glassItemRepository: repos.glassItem,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:64:40: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            inventoryRepository: repos.inventory,
                                       ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:65:39: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            locationRepository: repos.location,
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift:66:39: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: repos.itemTags
                                      ^
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX451_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.first?.title,{ $0 == $1() },"Component 1",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.first?.title"),"==",.__fromStringLiteral(#""Component 1""#, "Component 1")),comments: [.__line("// Test component properties are preserved under pressure"),"First component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX452_8_6expectfMf3_.swift:1:49: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.last?.title,{ $0 == $1() },"Component \(componentCount)",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.last?.title"),"==",.__fromSyntaxNode(#""Component \(componentCount)""#)),comments: ["Last component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX25_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.displayName,{ $0 == $1() },"Pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.displayName"),"==",.__fromStringLiteral(#""Pounds""#, "Pounds")),comments: ["Pounds should display as 'Pounds'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX26_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.displayName,{ $0 == $1() },"Kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.displayName"),"==",.__fromStringLiteral(#""Kilograms""#, "Kilograms")),comments: ["Kilograms should display as 'Kilograms'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX31_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.symbol,{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.symbol"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should have 'lb' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX32_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.symbol,{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.symbol"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should have 'kg' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX37_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX38_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX43_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.id,{ $0 == $1() },"pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.id"),"==",.__fromStringLiteral(#""pounds""#, "pounds")),comments: ["Pounds ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX44_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.id,{ $0 == $1() },"kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.id"),"==",.__fromStringLiteral(#""kilograms""#, "kilograms")),comments: ["Kilograms ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX95_8_6expectfMf_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0, to: .kilograms),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0, to: .kilograms)"),"==",.__fromSyntaxNode("0")),comments: [.__line("// Test zero conversion"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX96_8_6expectfMf0_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0, to: .pounds),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0, to: .pounds)"),"==",.__fromSyntaxNode("0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:108: warning: main actor-isolated property 'displayName' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogUnits.displayName:2:25: note: property declared here
@MainActor internal var displayName: String { get }}
                        ^
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX162_8_6expectfMf_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .pounds),{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .pounds)"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should display as lb"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX163_8_6expectfMf0_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .kilograms),{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .kilograms)"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should display as kg"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX164_8_6expectfMf1_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .shorts),{ $0 == $1() },"Shorts",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .shorts)"),"==",.__fromStringLiteral(#""Shorts""#, "Shorts")),comments: ["Shorts should display as Shorts"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX237_8_6expectfMf1_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0.0, to: .kilograms),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0.0, to: .kilograms)"),"==",.__fromSyntaxNode("0.0")),comments: [.__line("// Test with zero"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX238_8_6expectfMf2_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0.0, to: .pounds),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0.0, to: .pounds)"),"==",.__fromSyntaxNode("0.0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:63:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:81:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:112:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:143:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:172:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:182:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:211:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX165_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'inventory' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventory.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.inventory.count"),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX166_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'totalQuantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.totalQuantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.totalQuantity"),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX167_8_6expectfMf2_.swift:1:45: warning: main actor-isolated property 'inventoryByType' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventoryByType["rod"],{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"completeItem.inventoryByType["rod"]"#),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:65:26: warning: 'is' test is always true
        #expect(contents is [String], "Should return array of strings")
                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:106:23: warning: 'is' test is always true
        #expect(alert is Alert, "Should create Alert instance")
                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:266:32: warning: comparing non-optional value of type 'some View' to 'nil' always returns true
        #expect(navigationView != nil, "Should create modified view successfully")
                ~~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:282:32: warning: comparing non-optional value of type 'some View' to 'nil' always returns true
        #expect(nonLoadingView != nil, "Should create non-loading overlay view successfully")
                ~~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:288:29: warning: comparing non-optional value of type 'some View' to 'nil' always returns true
        #expect(loadingView != nil, "Should create loading overlay view successfully")
                ~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:292:36: warning: comparing non-optional value of type 'some View' to 'nil' always returns true
        #expect(defaultMessageView != nil, "Should create overlay view with default message")
                ~~~~~~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:456:54: warning: main actor-isolated property 'isLoading' can not be referenced from a nonisolated context
        let loadingStates = loadingOverlays.map { $0.isLoading }
                                                     ^
Flameworker.LoadingOverlay.isLoading:2:25: note: property declared here
@MainActor internal let isLoading: Bool}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:427:30: warning: main actor-isolated initializer 'init(icon:title:subtitle:buttonTitle:buttonAction:features:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let emptyState = EmptyStateView(
                             ^~~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX451_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.first?.title,{ $0 == $1() },"Component 1",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.first?.title"),"==",.__fromStringLiteral(#""Component 1""#, "Component 1")),comments: [.__line("// Test component properties are preserved under pressure"),"First component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX452_8_6expectfMf3_.swift:1:49: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.last?.title,{ $0 == $1() },"Component \(componentCount)",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.last?.title"),"==",.__fromSyntaxNode(#""Component \(componentCount)""#)),comments: ["Last component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX25_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.displayName,{ $0 == $1() },"Pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.displayName"),"==",.__fromStringLiteral(#""Pounds""#, "Pounds")),comments: ["Pounds should display as 'Pounds'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX26_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.displayName,{ $0 == $1() },"Kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.displayName"),"==",.__fromStringLiteral(#""Kilograms""#, "Kilograms")),comments: ["Kilograms should display as 'Kilograms'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX31_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.symbol,{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.symbol"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should have 'lb' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX32_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.symbol,{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.symbol"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should have 'kg' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX37_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX38_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX43_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.id,{ $0 == $1() },"pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.id"),"==",.__fromStringLiteral(#""pounds""#, "pounds")),comments: ["Pounds ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX44_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.id,{ $0 == $1() },"kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.id"),"==",.__fromStringLiteral(#""kilograms""#, "kilograms")),comments: ["Kilograms ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX95_8_6expectfMf_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0, to: .kilograms),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0, to: .kilograms)"),"==",.__fromSyntaxNode("0")),comments: [.__line("// Test zero conversion"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX96_8_6expectfMf0_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0, to: .pounds),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0, to: .pounds)"),"==",.__fromSyntaxNode("0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:108: warning: main actor-isolated property 'displayName' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogUnits.displayName:2:25: note: property declared here
@MainActor internal var displayName: String { get }}
                        ^
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX162_8_6expectfMf_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .pounds),{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .pounds)"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should display as lb"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX163_8_6expectfMf0_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .kilograms),{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .kilograms)"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should display as kg"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX164_8_6expectfMf1_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .shorts),{ $0 == $1() },"Shorts",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .shorts)"),"==",.__fromStringLiteral(#""Shorts""#, "Shorts")),comments: ["Shorts should display as Shorts"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX237_8_6expectfMf1_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0.0, to: .kilograms),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0.0, to: .kilograms)"),"==",.__fromSyntaxNode("0.0")),comments: [.__line("// Test with zero"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX238_8_6expectfMf2_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0.0, to: .pounds),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0.0, to: .pounds)"),"==",.__fromSyntaxNode("0.0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:63:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:81:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:112:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:143:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:172:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:182:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift:211:34: warning: conditional cast from 'AppError' to 'AppError' always succeeds
            let appError = error as? AppError
                                 ^
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX165_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'inventory' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventory.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.inventory.count"),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventory.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX166_8_6expectfMf1_.swift:1:45: warning: main actor-isolated property 'totalQuantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.totalQuantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("completeItem.totalQuantity"),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:167:9: note: in expansion of macro 'expect' here
        #expect(completeItem.totalQuantity == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0041ViewRepositoryIntegrationTestsswift_owGDnfMX167_8_6expectfMf2_.swift:1:45: warning: main actor-isolated property 'inventoryByType' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(completeItem.inventoryByType["rod"],{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"completeItem.inventoryByType["rod"]"#),"==",.__fromSyntaxNode("10.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift:168:9: note: in expansion of macro 'expect' here
        #expect(completeItem.inventoryByType["rod"] == 10.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX451_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.first?.title,{ $0 == $1() },"Component 1",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.first?.title"),"==",.__fromStringLiteral(#""Component 1""#, "Component 1")),comments: [.__line("// Test component properties are preserved under pressure"),"First component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:452:9: note: in expansion of macro 'expect' here
        #expect(components.first?.title == "Component 1", "First component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029ViewUtilitiesTestsswift_tAFJhfMX452_8_6expectfMf3_.swift:1:49: warning: main actor-isolated property 'title' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(components.last?.title,{ $0 == $1() },"Component \(componentCount)",expression: .__fromBinaryOperation(.__fromSyntaxNode("components.last?.title"),"==",.__fromSyntaxNode(#""Component \(componentCount)""#)),comments: ["Last component should have correct title"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift:453:9: note: in expansion of macro 'expect' here
        #expect(components.last?.title == "Component \(componentCount)", "Last component should have correct title")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX25_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.displayName,{ $0 == $1() },"Pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.displayName"),"==",.__fromStringLiteral(#""Pounds""#, "Pounds")),comments: ["Pounds should display as 'Pounds'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:26:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.displayName == "Pounds", "Pounds should display as 'Pounds'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX26_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'displayName' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.displayName,{ $0 == $1() },"Kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.displayName"),"==",.__fromStringLiteral(#""Kilograms""#, "Kilograms")),comments: ["Kilograms should display as 'Kilograms'"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:27:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.displayName == "Kilograms", "Kilograms should display as 'Kilograms'")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX31_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.symbol,{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.symbol"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should have 'lb' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:32:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.symbol == "lb", "Pounds should have 'lb' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX32_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.symbol,{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.symbol"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should have 'kg' symbol"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:33:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.symbol == "kg", "Kilograms should have 'kg' symbol")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX37_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX38_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'systemImage' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.systemImage,{ $0 == $1() },"scalemass",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.systemImage"),"==",.__fromStringLiteral(#""scalemass""#, "scalemass")),comments: ["Should use scalemass system image"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.systemImage == "scalemass", "Should use scalemass system image")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX43_8_6expectfMf_.swift:1:50: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.id,{ $0 == $1() },"pounds",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.id"),"==",.__fromStringLiteral(#""pounds""#, "pounds")),comments: ["Pounds ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:44:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.id == "pounds", "Pounds ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX44_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.id,{ $0 == $1() },"kilograms",expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.id"),"==",.__fromStringLiteral(#""kilograms""#, "kilograms")),comments: ["Kilograms ID should match raw value"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.id == "kilograms", "Kilograms ID should match raw value")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:61:29: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result = pounds.convert(2.20462, to: .kilograms)
                     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:65:30: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result2 = pounds.convert(10.0, to: .kilograms)
                      ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:73:32: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result = kilograms.convert(1.0, to: .pounds)
                     ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:77:33: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result2 = kilograms.convert(5.0, to: .pounds)
                      ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:85:29: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result = pounds.convert(5.0, to: .pounds)
                     ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:89:33: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let result2 = kilograms.convert(3.5, to: .kilograms)
                      ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      await 
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX95_8_6expectfMf_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0, to: .kilograms),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0, to: .kilograms)"),"==",.__fromSyntaxNode("0")),comments: [.__line("// Test zero conversion"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:96:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0, to: .kilograms) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX96_8_6expectfMf0_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0, to: .pounds),{ $0 == $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0, to: .pounds)"),"==",.__fromSyntaxNode("0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:97:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0, to: .pounds) == 0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:101:48: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedLarge = WeightUnit.pounds.convert(largeValue, to: .kilograms)
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:102:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let backConverted = WeightUnit.kilograms.convert(convertedLarge, to: .pounds)
                            ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:107:48: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedSmall = WeightUnit.pounds.convert(smallValue, to: .kilograms)
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:108:55: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let backConvertedSmall = WeightUnit.kilograms.convert(convertedSmall, to: .pounds)
                                 ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:118:48: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let poundsToKg = WeightUnit.pounds.convert(value, to: .kilograms)
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:119:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let backToPounds = WeightUnit.kilograms.convert(poundsToKg, to: .pounds)
                               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:123:51: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let kgToPounds = WeightUnit.kilograms.convert(value, to: .pounds)
                             ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:124:46: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let backToKg = WeightUnit.pounds.convert(kgToPounds, to: .kilograms)
                           ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:108: warning: main actor-isolated property 'displayName' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                                           ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CatalogUnits.displayName:2:25: note: property declared here
@MainActor internal var displayName: String { get }}
                        ^
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX162_8_6expectfMf_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .pounds),{ $0 == $1() },"lb",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .pounds)"),"==",.__fromStringLiteral(#""lb""#, "lb")),comments: ["Pounds should display as lb"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:163:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .pounds) == "lb", "Pounds should display as lb")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX163_8_6expectfMf0_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .kilograms),{ $0 == $1() },"kg",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .kilograms)"),"==",.__fromStringLiteral(#""kg""#, "kg")),comments: ["Kilograms should display as kg"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:164:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .kilograms) == "kg", "Kilograms should display as kg")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX164_8_6expectfMf1_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .shorts),{ $0 == $1() },"Shorts",expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .shorts)"),"==",.__fromStringLiteral(#""Shorts""#, "Shorts")),comments: ["Shorts should display as Shorts"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:165:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .shorts) == "Shorts", "Shorts should display as Shorts")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX165_8_6expectfMf2_.swift:1:51: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(UnitsDisplayHelper.displayName(for: .rods),{ $0 == $1() },CatalogUnits.rods.displayName,expression: .__fromBinaryOperation(.__fromSyntaxNode("UnitsDisplayHelper.displayName(for: .rods)"),"==",.__fromSyntaxNode("CatalogUnits.rods.displayName")),comments: ["Rods should use displayName"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                  ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:166:9: note: in expansion of macro 'expect' here
        #expect(UnitsDisplayHelper.displayName(for: .rods) == CatalogUnits.rods.displayName, "Rods should use displayName")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:173:50: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            let displayName = UnitsDisplayHelper.displayName(for: unit)
                              ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
                              await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:182:46: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let poundsName1 = UnitsDisplayHelper.displayName(for: .pounds)
                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:183:46: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let poundsName2 = UnitsDisplayHelper.displayName(for: .pounds)
                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:186:42: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let kgName1 = UnitsDisplayHelper.displayName(for: .kilograms)
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:187:42: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let kgName2 = UnitsDisplayHelper.displayName(for: .kilograms)
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                      await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:199:37: warning: main actor-isolated property 'symbol' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            let symbol = weightUnit.symbol
                         ~~~~~~~~~~~^~~~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:204:61: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                let catalogDisplayName = UnitsDisplayHelper.displayName(for: CatalogUnits.pounds)
                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:209:61: warning: main actor-isolated static method 'displayName(for:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                let catalogDisplayName = UnitsDisplayHelper.displayName(for: CatalogUnits.kilograms)
                                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:229:47: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedTiny = WeightUnit.pounds.convert(tiny, to: .kilograms)
                            ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:234:48: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let convertedLarge = WeightUnit.pounds.convert(large, to: .kilograms)
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                             await 
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX237_8_6expectfMf1_.swift:1:50: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.pounds.convert(0.0, to: .kilograms),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.pounds.convert(0.0, to: .kilograms)"),"==",.__fromSyntaxNode("0.0")),comments: [.__line("// Test with zero"),"Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:238:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.pounds.convert(0.0, to: .kilograms) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0026WeightUnitTestsswift_DsAGgfMX238_8_6expectfMf2_.swift:1:53: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(WeightUnit.kilograms.convert(0.0, to: .pounds),{ $0 == $1() },0.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("WeightUnit.kilograms.convert(0.0, to: .pounds)"),"==",.__fromSyntaxNode("0.0")),comments: ["Zero should convert to zero"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:239:9: note: in expansion of macro 'expect' here
        #expect(WeightUnit.kilograms.convert(0.0, to: .pounds) == 0.0, "Zero should convert to zero")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:248:39: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            value = WeightUnit.pounds.convert(value, to: .kilograms)
                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift:249:42: warning: main actor-isolated instance method 'convert(_:to:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
            value = WeightUnit.kilograms.convert(value, to: .pounds)
                    ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                    await 

SwiftCompile normal arm64 Compiling\ GlassItemDataLoadingServiceTests.swift,\ GlassItemSpecificTests.swift,\ ImageHelpersTests.swift,\ ImageLoadingTests.swift,\ ImagePermissionTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftDriverJobDiscovery normal arm64 Compiling TestFixes.swift, UIStateManagementTests.swift, UserNotesEditorTests.swift, UserSettingsTests.swift, UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftDriverJobDiscovery normal arm64 Compiling CatalogItemHelpersTests.swift, CatalogItemModelPhase1Tests.swift, CatalogItemParentModelTests.swift, CatalogServiceAdvancedTests.swift, CatalogViewDataInitializationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')


Test session results, code coverage, and logs:
	/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Logs/Test/Test-Flameworker-2025.10.18_15-15-41--0700.xcresult

Testing failed:
	Missing argument for parameter 'userTagsRepository' in call
	Missing argument for parameter 'userTagsRepository' in call
	Missing argument for parameter 'userTagsRepository' in call
	Missing argument for parameter 'userTagsRepository' in call
	Missing argument for parameter 'userTagsRepository' in call
	Missing argument for parameter 'userTagsRepository' in call
	Testing cancelled because the build failed.

** TEST FAILED **


The following build commands failed:
	SwiftCompile normal arm64 Compiling\ MockRepositoryDebugTest.swift,\ AdvancedTestingTests.swift,\ BasicFunctionalityTests.swift,\ CatalogBuildModelTests.swift,\ CatalogBundleDebugViewTests.swift,\ CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/MockRepositoryDebugTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	SwiftCompile normal arm64 Compiling\ ValidationUtilitiesTests.swift,\ ViewRepositoryIntegrationTests.swift,\ ViewStateManagementTests.swift,\ ViewUtilitiesTests.swift,\ WeightUnitTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	Testing project Flameworker with scheme Flameworker
(5 failures)
