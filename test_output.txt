Command line invocation:
    /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild test -project Flameworker.xcodeproj -scheme Flameworker -testPlan RepositoryTests -destination "platform=iOS Simulator,name=iPhone 17" "-only-testing:RepositoryTests/CoreDataInventoryRepositoryTests"

ComputePackagePrebuildTargetDependencyGraph

Prepare packages

CreateBuildRequest

SendProjectDescription

CreateBuildOperation

ComputeTargetDependencyGraph
note: Building targets in dependency order
note: Target dependency graph (5 targets)
    Target 'PerformanceTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'FlameworkerUITests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'FlameworkerTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'RepositoryTests' in project 'Flameworker'
        ➜ Explicit dependency on target 'Flameworker' in project 'Flameworker'
    Target 'Flameworker' in project 'Flameworker' (no dependencies)

GatherProvisioningInputs

CreateBuildDescription

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -v -E -dM -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -x c -c /dev/null

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc --version

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/momc --dry-run --action generate --swift-version 5.0 --sdkroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk --iphonesimulator-deployment-target 26.0 --module Flameworker /Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Flameworker.xcdatamodeld /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources/CoreDataGenerated/Flameworker

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/actool --print-asset-tag-combinations --output-format xml1 /Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Assets.xcassets

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/usr/bin/actool --version --output-format xml1

ExecuteExternalTool /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld -version_details

Build description signature: bd725a407d04d339e2cad63b1da029fa
Build description path: /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/XCBuildData/bd725a407d04d339e2cad63b1da029fa.xcbuilddata
ClangStatCache /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker.xcodeproj
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang-stat-cache /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -o /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache

MkDir /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest (in target 'RepositoryTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /bin/mkdir -p /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/RepositoryTests.xctest

MkDir /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/FlameworkerTests.xctest (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /bin/mkdir -p /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/FlameworkerTests.xctest

MkDir /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest (in target 'PerformanceTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /bin/mkdir -p /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns/PerformanceTests.xctest

WriteAuxiliaryFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftConstValuesFileList (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    write-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftConstValuesFileList

WriteAuxiliaryFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.LinkFileList (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    write-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.LinkFileList

MkDir /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /bin/mkdir -p /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/PlugIns

WriteAuxiliaryFile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftFileList (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    write-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftFileList

MkDir /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /bin/mkdir -p /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

ProcessProductPackaging "" /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
    Entitlements:
    
    {
    "application-identifier" = "755FYD4YJY.motleywoods.Flameworker";
}
    
    builtin-productPackagingUtility -entitlements -format xml -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent

ProcessProductPackagingDER /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent.der (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /usr/bin/derq query -f xml -i /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent.der --raw

Ld /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/__preview.dylib normal (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -Xlinker -reproducible -target arm64-apple-ios26.0-simulator -dynamiclib -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -O0 -L/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -install_name @rpath/Flameworker.debug.dylib -dead_strip -rdynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -Xlinker -debug_variant -Xlinker -dependency_info -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_dependency_info.dat -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __entitlements -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent -Xlinker -sectcreate -Xlinker __TEXT -Xlinker __ents_der -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker.app-Simulated.xcent.der -Xlinker -no_adhoc_codesign -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/__preview.dylib

SwiftDriver Flameworker normal arm64 com.apple.xcode.tools.swift.compiler (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-SwiftDriver -- /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name Flameworker -Onone -enforce-exclusivity\=checked @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftFileList -DDEBUG -default-isolation\=MainActor -enable-bare-slash-regex -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -target arm64-apple-ios26.0-simulator -g -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -Xfrontend -serialize-debugging-options -profile-coverage-mapping -profile-generate -enable-testing -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -swift-version 5 -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -emit-localized-strings -emit-localized-strings-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64 -c -j11 -enable-batch-mode -incremental -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -explicit-module-build -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -clang-scanner-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -sdk-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.swiftmodule -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_const_extract_protocols.json -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources -Xcc -DDEBUG\=1 -emit-objc-header -emit-objc-header-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-Swift.h -working-directory /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -experimental-emit-module-separately -disable-cmo

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCUnit.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCUnit.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCUnit.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/libXCTestSwiftSupport.dylib /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestSwiftSupport.dylib (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestSwiftSupport.dylib /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCUIAutomation.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/XCUIAutomation.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/XCUIAutomation.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/libXCTestBundleInject.dylib /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestBundleInject.dylib (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libXCTestBundleInject.dylib /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCTestCore.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTestCore.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTestCore.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCTestSupport.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTestSupport.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTestSupport.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCTest.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/XCTest.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/XCTest.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/XCTAutomationSupport.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTAutomationSupport.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks/XCTAutomationSupport.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

Copy /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks/Testing.framework /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/Testing.framework (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -exclude Headers -exclude PrivateHeaders -exclude Modules -exclude \*.tbd -resolve-src-symlinks /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/Testing.framework /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Frameworks

CompileAssetCatalogVariant thinned /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Assets.xcassets (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /Applications/Xcode.app/Contents/Developer/usr/bin/actool /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Assets.xcassets --compile /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_output/thinned --output-format human-readable-text --notices --warnings --export-dependency-info /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_dependencies_thinned --output-partial-info-plist /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_generated_info.plist_thinned --app-icon AppIcon --accent-color AccentColor --compress-pngs --enable-on-demand-resources YES --filter-for-thinning-device-configuration iPhone18,3 --filter-for-device-os-version 26.0 --development-region en --target-device iphone --target-device ipad --minimum-deployment-target 26.0 --platform iphonesimulator
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:153:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:200:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:229:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:262:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:305:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:329:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:356:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:397:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:422:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:453:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await 
objc[36204]: Class _NoAnimationDelegate is implemented in both /Library/Developer/CoreSimulator/Volumes/iOS_23A343/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 26.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/Frameworks/SwiftUICore.framework/SwiftUICore (0x141a08130) and /Library/Developer/CoreSimulator/Volumes/iOS_23A343/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 26.0.simruntime/Contents/Resources/RuntimeRoot/System/Library/PrivateFrameworks/UIKitCore.framework/UIKitCore (0x13eb71198). This may cause spurious casting failures and mysterious crashes. One of the duplicates must be removed or renamed.
/* com.apple.actool.compilation-results */
/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_generated_info.plist_thinned
/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_output/thinned/AppIcon60x60@2x.png
/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_output/thinned/AppIcon76x76@2x~ipad.png
/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/assetcatalog_output/thinned/Assets.car


SwiftDriver\ Compilation\ Requirements Flameworker normal arm64 com.apple.xcode.tools.swift.compiler (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-Swift-Compilation-Requirements -- /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name Flameworker -Onone -enforce-exclusivity\=checked @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftFileList -DDEBUG -default-isolation\=MainActor -enable-bare-slash-regex -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -target arm64-apple-ios26.0-simulator -g -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -Xfrontend -serialize-debugging-options -profile-coverage-mapping -profile-generate -enable-testing -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -swift-version 5 -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -emit-localized-strings -emit-localized-strings-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64 -c -j11 -enable-batch-mode -incremental -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -explicit-module-build -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -clang-scanner-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -sdk-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.swiftmodule -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_const_extract_protocols.json -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources -Xcc -DDEBUG\=1 -emit-objc-header -emit-objc-header-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-Swift.h -working-directory /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -experimental-emit-module-separately -disable-cmo

SwiftDriver\ Compilation Flameworker normal arm64 com.apple.xcode.tools.swift.compiler (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-Swift-Compilation -- /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name Flameworker -Onone -enforce-exclusivity\=checked @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.SwiftFileList -DDEBUG -default-isolation\=MainActor -enable-bare-slash-regex -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -target arm64-apple-ios26.0-simulator -g -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -Xfrontend -serialize-debugging-options -profile-coverage-mapping -profile-generate -enable-testing -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -swift-version 5 -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -emit-localized-strings -emit-localized-strings-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64 -c -j11 -enable-batch-mode -incremental -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -explicit-module-build -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -clang-scanner-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -sdk-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.swiftmodule -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_const_extract_protocols.json -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/DerivedSources -Xcc -DDEBUG\=1 -emit-objc-header -emit-objc-header-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-Swift.h -working-directory /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -experimental-emit-module-separately -disable-cmo

SwiftDriver FlameworkerTests normal arm64 com.apple.xcode.tools.swift.compiler (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    builtin-SwiftDriver -- /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swiftc -module-name FlameworkerTests -Onone -enforce-exclusivity\=checked @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests.SwiftFileList -DDEBUG -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing -enable-bare-slash-regex -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -target arm64-apple-ios26.0-simulator -g -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -Xfrontend -serialize-debugging-options -profile-coverage-mapping -profile-generate -enable-testing -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -swift-version 5 -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -Isystem /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/Developer/Library/Frameworks -c -j11 -enable-batch-mode -incremental -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-OutputFileMap.json -use-frontend-parseable-output -save-temps -no-color-diagnostics -explicit-module-build -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -clang-scanner-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -sdk-module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex -serialize-diagnostics -emit-dependencies -emit-module -emit-module-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests.swiftmodule -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/swift-overrides.hmap -emit-const-values -Xfrontend -const-gather-protocols-file -Xfrontend /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests_const_extract_protocols.json -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources -Xcc -DDEBUG\=1 -emit-objc-header -emit-objc-header-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-Swift.h -working-directory /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -experimental-emit-module-separately -disable-cmo
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:153:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:200:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:229:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:262:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:305:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:329:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:356:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:397:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:422:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift:453:9: warning: 'try' must precede 'await'
        await try addTestGlassItems(repos)
        ^~~~~~
                  await  (in target 'FlameworkerTests' from project 'Flameworker')

Ld /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Flameworker.debug.dylib normal (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang -Xlinker -reproducible -target arm64-apple-ios26.0-simulator -dynamiclib -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -O0 -L/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/EagerLinkingTBDs/Debug-iphonesimulator -L/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/EagerLinkingTBDs/Debug-iphonesimulator -F/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -filelist /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.LinkFileList -install_name @rpath/Flameworker.debug.dylib -Xlinker -rpath -Xlinker @executable_path/Frameworks -dead_strip -Xlinker -object_path_lto -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_lto.o -rdynamic -Xlinker -no_deduplicate -Xlinker -objc_abi_version -Xlinker 2 -Xlinker -debug_variant -Xlinker -dependency_info -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker_dependency_info.dat -fobjc-link-runtime -fprofile-instr-generate -L/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/iphonesimulator -L/usr/lib/swift -Xlinker -add_ast_path -Xlinker /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker.swiftmodule @/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Objects-normal/arm64/Flameworker-linker-args.resp -Xlinker -alias -Xlinker _main -Xlinker ___debug_main_executable_dylib_entry_point -Xlinker -no_adhoc_codesign -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Flameworker.debug.dylib

SwiftCompile normal arm64 Compiling\ GlassItemSpecificTests.swift,\ ImageHelpersTests.swift,\ ImageLoadingTests.swift,\ ImagePermissionTests.swift,\ IntegrationTests.swift,\ InventoryDetailViewUserNotesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ JSONDataLoaderTests.swift,\ LocationAutoCompleteFieldTests.swift,\ LocationServiceTests.swift,\ MainTabViewTests.swift,\ MultiUserScenarioTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:121:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "JSONDataLoader should instantiate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:117:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:130:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:229:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Date format \(format) was attempted")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:487:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Should handle multiple sequential processing without memory issues")
                ^~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:90: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX39_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.location,{ $0 == $1() },"Workshop Storage",expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.location"),"==",.__fromStringLiteral(#""Workshop Storage""#, "Workshop Storage")),comments: ["Location should have correct name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX40_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.quantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.quantity"),"==",.__fromSyntaxNode("10.0")),comments: ["Location should have correct quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX118_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.quantity,{ $0 == $1() },25.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.quantity"),"==",.__fromSyntaxNode("25.0")),comments: [.__line("// Assert: Should create location with correct quantity"),"Should add quantity correctly"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX119_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.location,{ $0 == $1() },"Storage Bin A",expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.location"),"==",.__fromStringLiteral(#""Storage Bin A""#, "Storage Bin A")),comments: ["Should have correct location name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX120_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.inventory_id,{ $0 == $1() },inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.inventory_id"),"==",.__fromSyntaxNode("inventory_id")),comments: ["Should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX140_8_6expectfMf0_.swift:1:55: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
Testing.__checkValue(createdLocations.allSatisfy { $0.inventory_id == inventory_id },expression: .__fromSyntaxNode("createdLocations.allSatisfy { $0.inventory_id == inventory_id }"),comments: ["All locations should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX168_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(sourceLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("sourceLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Source location should have remaining quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX169_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(destinationLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("destinationLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Destination location should have moved quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033MultiUserScenarioTestsswift_DbGHjfMX601_8_6expectfMf1_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),">",.__fromSyntaxNode("0")),comments: ["Search should work after conflict resolution"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:121:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "JSONDataLoader should instantiate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:117:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:130:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:229:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Date format \(format) was attempted")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:487:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Should handle multiple sequential processing without memory issues")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:37:31: warning: comparing non-optional value of type 'LocationAutoCompleteField' to 'nil' always returns true
        #expect(locationField != nil, "LocationAutoCompleteField should accept LocationRepository via dependency injection")
                ~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:33:33: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            locationRepository: locationRepository
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:51:31: warning: comparing non-optional value of type 'LocationAutoCompleteField' to 'nil' always returns true
        #expect(locationField != nil, "LocationAutoCompleteField should work with RepositoryFactory pattern")
                ~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:72:31: warning: comparing non-optional value of type 'LocationAutoCompleteField' to 'nil' always returns true
        #expect(locationField != nil, "LocationAutoCompleteField should access location data via LocationRepository")
                ~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:68:33: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            locationRepository: locationRepository
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:78:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:94:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift:108:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:90: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX39_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.location,{ $0 == $1() },"Workshop Storage",expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.location"),"==",.__fromStringLiteral(#""Workshop Storage""#, "Workshop Storage")),comments: ["Location should have correct name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX40_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.quantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.quantity"),"==",.__fromSyntaxNode("10.0")),comments: ["Location should have correct quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX118_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.quantity,{ $0 == $1() },25.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.quantity"),"==",.__fromSyntaxNode("25.0")),comments: [.__line("// Assert: Should create location with correct quantity"),"Should add quantity correctly"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX119_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.location,{ $0 == $1() },"Storage Bin A",expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.location"),"==",.__fromStringLiteral(#""Storage Bin A""#, "Storage Bin A")),comments: ["Should have correct location name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX120_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.inventory_id,{ $0 == $1() },inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.inventory_id"),"==",.__fromSyntaxNode("inventory_id")),comments: ["Should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX140_8_6expectfMf0_.swift:1:55: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
Testing.__checkValue(createdLocations.allSatisfy { $0.inventory_id == inventory_id },expression: .__fromSyntaxNode("createdLocations.allSatisfy { $0.inventory_id == inventory_id }"),comments: ["All locations should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX168_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(sourceLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("sourceLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Source location should have remaining quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX169_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(destinationLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("destinationLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Destination location should have moved quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0033MultiUserScenarioTestsswift_DbGHjfMX601_8_6expectfMf1_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),">",.__fromSyntaxNode("0")),comments: ["Search should work after conflict resolution"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:121:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "JSONDataLoader should instantiate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:117:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:130:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:229:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Date format \(format) was attempted")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:487:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Should handle multiple sequential processing without memory issues")
                ^~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:90: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:26:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:29:29: warning: main actor-isolated initializer 'init(id:inventory_id:location:quantity:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationModel = LocationModel(
                            ^~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX39_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.location,{ $0 == $1() },"Workshop Storage",expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.location"),"==",.__fromStringLiteral(#""Workshop Storage""#, "Workshop Storage")),comments: ["Location should have correct name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX40_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.quantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.quantity"),"==",.__fromSyntaxNode("10.0")),comments: ["Location should have correct quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:51:42: warning: comparing non-optional value of type 'InventoryTrackingService' to 'nil' always returns true
        #expect(inventoryTrackingService != nil, "InventoryTrackingService should be created with location repository support")
                ~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:57:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:62:25: warning: main actor-isolated initializer 'init(id:inventory_id:location:quantity:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let location1 = LocationModel(
                        ^~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:67:25: warning: main actor-isolated initializer 'init(id:inventory_id:location:quantity:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let location2 = LocationModel(
                        ^~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:87:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:90:32: warning: main actor-isolated initializer 'init(id:inventory_id:location:quantity:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let workshopLocation = LocationModel(
                               ^~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:108:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX118_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.quantity,{ $0 == $1() },25.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.quantity"),"==",.__fromSyntaxNode("25.0")),comments: [.__line("// Assert: Should create location with correct quantity"),"Should add quantity correctly"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX119_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.location,{ $0 == $1() },"Storage Bin A",expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.location"),"==",.__fromStringLiteral(#""Storage Bin A""#, "Storage Bin A")),comments: ["Should have correct location name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX120_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.inventory_id,{ $0 == $1() },inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.inventory_id"),"==",.__fromSyntaxNode("inventory_id")),comments: ["Should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX140_8_6expectfMf0_.swift:1:55: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
Testing.__checkValue(createdLocations.allSatisfy { $0.inventory_id == inventory_id },expression: .__fromSyntaxNode("createdLocations.allSatisfy { $0.inventory_id == inventory_id }"),comments: ["All locations should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:127:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:130:25: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        let locations = [
                        ^
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:131:13: note: calls to initializer 'init(id:inventory_id:location:quantity:)' from outside of its actor context are implicitly asynchronous
            LocationModel(inventory_id: inventory_id, location: "Bin 1", quantity: 10.0),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:132:13: note: calls to initializer 'init(id:inventory_id:location:quantity:)' from outside of its actor context are implicitly asynchronous
            LocationModel(inventory_id: inventory_id, location: "Bin 2", quantity: 15.0),
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:133:13: note: calls to initializer 'init(id:inventory_id:location:quantity:)' from outside of its actor context are implicitly asynchronous
            LocationModel(inventory_id: inventory_id, location: "Bin 3", quantity: 5.0)
            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:166:57: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
        let sourceLocation = sourceLocations.first { $0.inventory_id == inventory_id }
                                                        ^
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:167:67: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
        let destinationLocation = destinationLocations.first { $0.inventory_id == inventory_id }
                                                                  ^
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:147:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX168_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(sourceLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("sourceLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Source location should have remaining quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX169_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(destinationLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("destinationLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Destination location should have moved quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:176:34: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepository = MockLocationRepository()
                                 ^~~~~~~~~~~~~~~~~~~~~~~~
                                 await 
@__swiftmacro_16FlameworkerTests0033MultiUserScenarioTestsswift_DbGHjfMX601_8_6expectfMf1_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),">",.__fromSyntaxNode("0")),comments: ["Search should work after conflict resolution"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:121:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "JSONDataLoader should instantiate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:117:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:130:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:229:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Date format \(format) was attempted")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:487:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Should handle multiple sequential processing without memory issues")
                ^~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:90: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX39_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.location,{ $0 == $1() },"Workshop Storage",expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.location"),"==",.__fromStringLiteral(#""Workshop Storage""#, "Workshop Storage")),comments: ["Location should have correct name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX40_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.quantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.quantity"),"==",.__fromSyntaxNode("10.0")),comments: ["Location should have correct quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX118_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.quantity,{ $0 == $1() },25.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.quantity"),"==",.__fromSyntaxNode("25.0")),comments: [.__line("// Assert: Should create location with correct quantity"),"Should add quantity correctly"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX119_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.location,{ $0 == $1() },"Storage Bin A",expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.location"),"==",.__fromStringLiteral(#""Storage Bin A""#, "Storage Bin A")),comments: ["Should have correct location name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX120_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.inventory_id,{ $0 == $1() },inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.inventory_id"),"==",.__fromSyntaxNode("inventory_id")),comments: ["Should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX140_8_6expectfMf0_.swift:1:55: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
Testing.__checkValue(createdLocations.allSatisfy { $0.inventory_id == inventory_id },expression: .__fromSyntaxNode("createdLocations.allSatisfy { $0.inventory_id == inventory_id }"),comments: ["All locations should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX168_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(sourceLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("sourceLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Source location should have remaining quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX169_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(destinationLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("destinationLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Destination location should have moved quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:33:25: warning: comparing non-optional value of type 'MainTabView' to 'nil' always returns true
        #expect(tabView != nil, "MainTabView should accept catalogService via dependency injection")
                ~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:51:25: warning: comparing non-optional value of type 'MainTabView' to 'nil' always returns true
        #expect(tabView != nil, "MainTabView should accept both catalogService and purchaseService via dependency injection")
                ~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:42:65: warning: main actor-isolated conformance of 'MockPurchaseRecordRepository' to 'PurchaseRecordRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
        let purchaseService = PurchaseRecordService(repository: mockPurchaseRepository)
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:64:25: warning: comparing non-optional value of type 'MainTabView' to 'nil' always returns true
        #expect(tabView != nil, "MainTabView should work without Core Data context when services are injected")
                ~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:85:25: warning: comparing non-optional value of type 'MainTabView' to 'nil' always returns true
        #expect(tabView != nil, "MainTabView should work with RepositoryFactory-created services")
                ~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:86:32: warning: comparing non-optional value of type 'CatalogService' to 'nil' always returns true
        #expect(catalogService != nil, "CatalogService should be created successfully")
                ~~~~~~~~~~~~~~ ^  ~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift:87:42: warning: comparing non-optional value of type 'InventoryTrackingService' to 'nil' always returns true
        #expect(inventoryTrackingService != nil, "InventoryTrackingService should be created successfully")
                ~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~
@__swiftmacro_16FlameworkerTests0033MultiUserScenarioTestsswift_DbGHjfMX601_8_6expectfMf1_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),">",.__fromSyntaxNode("0")),comments: ["Search should work after conflict resolution"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:121:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "JSONDataLoader should instantiate successfully")
                ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:117:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:130:13: warning: initialization of immutable value 'loader' was never used; consider replacing with assignment to '_' or removing it
        let loader = JSONDataLoader()
        ~~~~^~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:229:25: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
                #expect(true, "Date format \(format) was attempted")
                        ^~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift:487:17: note: '#expect(_:_:)' will always pass here; use 'Bool(true)' to silence this warning (from macro 'expect')
        #expect(true, "Should handle multiple sequential processing without memory issues")
                ^~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:90: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX38_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.inventory_id,{ $0 == $1() },locationModel.inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.inventory_id"),"==",.__fromSyntaxNode("locationModel.inventory_id")),comments: [.__line("// Assert: Location should be created successfully"),"Location should be created with correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.inventory_id == locationModel.inventory_id, "Location should be created with correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX39_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.location,{ $0 == $1() },"Workshop Storage",expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.location"),"==",.__fromStringLiteral(#""Workshop Storage""#, "Workshop Storage")),comments: ["Location should have correct name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.location == "Workshop Storage", "Location should have correct name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX40_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(createdLocation.quantity,{ $0 == $1() },10.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("createdLocation.quantity"),"==",.__fromSyntaxNode("10.0")),comments: ["Location should have correct quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(createdLocation.quantity == 10.0, "Location should have correct quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX118_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.quantity,{ $0 == $1() },25.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.quantity"),"==",.__fromSyntaxNode("25.0")),comments: [.__line("// Assert: Should create location with correct quantity"),"Should add quantity correctly"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:119:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.quantity == 25.0, "Should add quantity correctly")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX119_8_6expectfMf0_.swift:1:48: warning: main actor-isolated property 'location' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.location,{ $0 == $1() },"Storage Bin A",expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.location"),"==",.__fromStringLiteral(#""Storage Bin A""#, "Storage Bin A")),comments: ["Should have correct location name"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:120:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.location == "Storage Bin A", "Should have correct location name")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX120_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'inventory_id' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(updatedLocation.inventory_id,{ $0 == $1() },inventory_id,expression: .__fromBinaryOperation(.__fromSyntaxNode("updatedLocation.inventory_id"),"==",.__fromSyntaxNode("inventory_id")),comments: ["Should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:121:9: note: in expansion of macro 'expect' here
        #expect(updatedLocation.inventory_id == inventory_id, "Should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX140_8_6expectfMf0_.swift:1:55: warning: main actor-isolated property 'inventory_id' can not be referenced from a nonisolated context
Testing.__checkValue(createdLocations.allSatisfy { $0.inventory_id == inventory_id },expression: .__fromSyntaxNode("createdLocations.allSatisfy { $0.inventory_id == inventory_id }"),comments: ["All locations should have correct inventory ID"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:141:9: note: in expansion of macro 'expect' here
        #expect(createdLocations.allSatisfy { $0.inventory_id == inventory_id }, "All locations should have correct inventory ID")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.LocationModel.inventory_id:2:25: note: property declared here
@MainActor internal let inventory_id: UUID}
                        ^
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX168_8_6expectfMf_.swift:1:48: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(sourceLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("sourceLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Source location should have remaining quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:169:9: note: in expansion of macro 'expect' here
        #expect(sourceLocation?.quantity == 15.0, "Source location should have remaining quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0031LocationServiceTestsswift_yFFIifMX169_8_6expectfMf0_.swift:1:53: warning: main actor-isolated property 'quantity' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(destinationLocation?.quantity,{ $0 == $1() },15.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("destinationLocation?.quantity"),"==",.__fromSyntaxNode("15.0")),comments: ["Destination location should have moved quantity"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift:170:9: note: in expansion of macro 'expect' here
        #expect(destinationLocation?.quantity == 15.0, "Destination location should have moved quantity")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:36:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:37:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: inventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:38:33: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            locationRepository: locationRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:39:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:44:36: warning: main actor-isolated conformance of 'MockItemMinimumRepository' to 'ItemMinimumRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemMinimumRepository: itemMinimumRepo,
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:45:37: warning: main actor-isolated conformance of 'MockShoppingListRepository' to 'ShoppingListRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            shoppingListRepository: shoppingListRepository,
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:46:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: inventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:47:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:48:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:49:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            userTagsRepository: userTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:53:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:56:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:57:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            userTagsRepository: userTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:28:29: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItemRepo = MockGlassItemRepository()
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:29:29: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inventoryRepo = MockInventoryRepository()
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:30:28: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let locationRepo = MockLocationRepository()
                           ^~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:31:28: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let itemTagsRepo = MockItemTagsRepository()
                           ^~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:32:28: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let userTagsRepo = MockUserTagsRepository()
                           ^~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:33:31: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let itemMinimumRepo = MockItemMinimumRepository()
                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~
                              await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:35:40: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryRepository:locationRepository:itemTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inventoryTrackingService = InventoryTrackingService(
                                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:42:38: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListRepository = MockShoppingListRepository()
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:43:35: warning: main actor-isolated initializer 'init(itemMinimumRepository:shoppingListRepository:inventoryRepository:glassItemRepository:itemTagsRepository:userTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListService = ShoppingListService(
                                  ^~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:52:30: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryTrackingService:shoppingListService:itemTagsRepository:userTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = CatalogService(
                             ^~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:79:39: warning: immutable value 'tags' was never used; consider replacing with '_' or removing it
        for (name, manufacturer, sku, tags) in glassItems {
                                      ^~~~
                                      _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:112:56: warning: immutable value 'shoppingListService' was never used; consider replacing with '_' or removing it
        let (catalogService, inventoryTrackingService, shoppingListService) = await createTestEnvironment()
                                                       ^~~~~~~~~~~~~~~~~~~
                                                       _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:230:21: warning: call to main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' in a synchronous nonisolated context
                    GlassItemSearchRequest(
                    ^
Flameworker.GlassItemSearchRequest.init:2:21: note: calls to initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' from outside of its actor context are implicitly asynchronous
@MainActor internal init(searchText: String? = nil, tags: [String] = [], manufacturers: [String] = [], coeValues: [Int32] = [], manufacturerStatuses: [String] = [], hasInventory: Bool? = nil, inventoryTypes: [String] = [], sortBy: Flameworker.GlassItemSortOption = .name, offset: Int? = nil, limit: Int? = nil)}
                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:145:42: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let updateItem = InventoryModel(
                                         ^~~~~~~~~~~~~~~
                                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:168:44: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let purchaseItem = InventoryModel(
                                           ^~~~~~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:191:44: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let purchaseItem = InventoryModel(
                                           ^~~~~~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:214:40: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let saleItem = InventoryModel(
                                       ^~~~~~~~~~~~~~~
                                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:277:56: warning: immutable value 'shoppingListService' was never used; consider replacing with '_' or removing it
        let (catalogService, inventoryTrackingService, shoppingListService) = await createTestEnvironment()
                                                       ^~~~~~~~~~~~~~~~~~~
                                                       _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:403:75: warning: main actor-isolated property 'natural_key' can not be referenced from a nonisolated context
        let catalogNaturalKeys = Set(finalCatalogItems.map { $0.glassItem.natural_key })
                                                                          ^
Flameworker.GlassItemModel.natural_key:2:25: note: property declared here
@MainActor internal let natural_key: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:403:65: warning: main actor-isolated property 'glassItem' can not be referenced from a nonisolated context
        let catalogNaturalKeys = Set(finalCatalogItems.map { $0.glassItem.natural_key })
                                                                ^
Flameworker.CompleteInventoryItemModel.glassItem:2:25: note: property declared here
@MainActor internal let glassItem: Flameworker.GlassItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:404:69: warning: main actor-isolated property 'item_natural_key' can not be referenced from a nonisolated context
        let inventoryNaturalKeys = Set(finalInventoryItems.map { $0.item_natural_key })
                                                                    ^
Flameworker.InventoryModel.item_natural_key:2:25: note: property declared here
@MainActor internal let item_natural_key: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:302:57: warning: main actor-isolated static method 'createNaturalKey(manufacturer:sku:sequence:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let naturalKey = GlassItemModel.createNaturalKey(manufacturer: manufacturer, sku: sku, sequence: 0)
                                         ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:303:36: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let item = GlassItemModel(
                                   ^~~~~~~~~~~~~~~
                                   await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:331:45: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let inventoryItem = InventoryModel(
                                            ^~~~~~~~~~~~~~~
                                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:350:45: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let searchRequest = GlassItemSearchRequest(
                                            ^~~~~~~~~~~~~~~~~~~~~~~
                                            await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:379:44: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let purchaseItem = InventoryModel(
                                           ^~~~~~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:420:56: warning: immutable value 'shoppingListService' was never used; consider replacing with '_' or removing it
        let (catalogService, inventoryTrackingService, shoppingListService) = await createTestEnvironment()
                                                       ^~~~~~~~~~~~~~~~~~~
                                                       _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:511:61: warning: main actor-isolated property 'type' can not be referenced from a nonisolated context
        let loadTestItems = finalInventoryItems.filter { $0.type == "test" }
                                                            ^
Flameworker.InventoryModel.type:2:25: note: property declared here
@MainActor internal let type: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:445:53: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                                let searchRequest = GlassItemSearchRequest(
                                                    ^~~~~~~~~~~~~~~~~~~~~~~
                                                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:463:44: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                                let item = InventoryModel(
                                           ^~~~~~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:471:53: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                                let searchRequest = GlassItemSearchRequest(
                                                    ^~~~~~~~~~~~~~~~~~~~~~~
                                                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:529:56: warning: immutable value 'shoppingListService' was never used; consider replacing with '_' or removing it
        let (catalogService, inventoryTrackingService, shoppingListService) = await createTestEnvironment()
                                                       ^~~~~~~~~~~~~~~~~~~
                                                       _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:580:55: warning: main actor-isolated property 'item_natural_key' can not be referenced from a nonisolated context
        let bullseyeRedItems = finalItems.filter { $0.item_natural_key == "bullseye-0124-0" }
                                                      ^
Flameworker.InventoryModel.item_natural_key:2:25: note: property declared here
@MainActor internal let item_natural_key: String}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:540:27: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let initialItem = InventoryModel(
                          ^~~~~~~~~~~~~~~
                          await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:557:44: warning: main actor-isolated initializer 'init(id:item_natural_key:type:subtype:subsubtype:dimensions:quantity:date_added:date_modified:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
                        let conflictItem = InventoryModel(
                                           ^~~~~~~~~~~~~~~
                                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:589:29: warning: main actor-isolated initializer 'init(searchText:tags:manufacturers:coeValues:manufacturerStatuses:hasInventory:inventoryTypes:sortBy:offset:limit:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let searchRequest = GlassItemSearchRequest(
                            ^~~~~~~~~~~~~~~~~~~~~~~
                            await 
@__swiftmacro_16FlameworkerTests0033MultiUserScenarioTestsswift_DbGHjfMX601_8_6expectfMf1_.swift:1:46: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(searchResults.items.count,{ $0 > $1() },0,expression: .__fromBinaryOperation(.__fromSyntaxNode("searchResults.items.count"),">",.__fromSyntaxNode("0")),comments: ["Search should work after conflict resolution"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                             ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift:602:9: note: in expansion of macro 'expect' here
        #expect(searchResults.items.count > 0, "Search should work after conflict resolution")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 Compiling\ CatalogItemParentModelTests.swift,\ CatalogServiceAdvancedTests.swift,\ CatalogViewDataInitializationTests.swift,\ CatalogViewTests.swift,\ CoreDataLeakDiagnostic.swift,\ CoreDataPreventionSystem.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ InventoryItemDetailViewTests.swift,\ InventorySearchSuggestionsTests.swift,\ InventoryServiceTests.swift,\ InventoryViewComponentsTests.swift,\ InventoryViewModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ EndToEndWorkflowTests.swift,\ ErrorBoundaryTests.swift,\ ErrorHandlingTests.swift,\ FilterUtilitiesTests.swift,\ FixedBasicTests.swift,\ GlassItemDataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ ValidationUtilitiesTests.swift,\ ViewRepositoryIntegrationTests.swift,\ ViewStateManagementTests.swift,\ ViewUtilitiesTests.swift,\ WeightUnitTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftEmitModule normal arm64 Emitting\ module\ for\ FlameworkerTests (in target 'FlameworkerTests' from project 'Flameworker')
EmitSwiftModule normal arm64 (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ SearchUtilitiesTests.swift,\ ServiceCoordinationTests.swift,\ ServiceValidationEnhancedTests.swift,\ ShoppingListOptionsViewTests.swift,\ ShoppingListRepositoryTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ ShoppingListServiceTests.swift,\ SimpleIsolatedTest.swift,\ SortUtilitiesTests.swift,\ StoreAutoCompleteFieldTests.swift,\ UserTagsIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
Failed frontend command:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/MockRepositoryDebugTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/AdvancedTestingUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/CollectionSafetyUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/NetworkSimulationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Utilities/StringValidationUtilities.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Sources/Views/Shared/Helpers/UIStateManagers.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/AdvancedTestingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemParentModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogServiceAdvancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewDataInitializationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataLeakDiagnostic.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreDataPreventionSystem.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CrossEntityIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataInitializationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataModelValidationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/EndToEndWorkflowTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorBoundaryTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ErrorHandlingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FilterUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/FixedBasicTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemDataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/GlassItemSpecificTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImageLoadingTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ImagePermissionTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/IntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryDetailViewUserNotesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryItemDetailViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventorySearchSuggestionsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewComponentsTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/InventoryViewModelTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/JSONDataLoaderTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/LocationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MainTabViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/MultiUserScenarioTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NetworkSimulationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NewTestTemplate.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceCoordinationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ServiceValidationEnhancedTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListOptionsViewTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListRepositoryTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestConfiguration.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestDataSetup.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/TestFixes.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UIStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserNotesEditorTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserSettingsTests.swift -primary-file /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ValidationUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewRepositoryIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewStateManagementTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ViewUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/WeightUnitTests.swift -supplementary-output-file-map /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/supplementaryOutputs-10 -target arm64-apple-ios26.0-simulator -module-can-import-version Darwin 347.0.12 0 -module-can-import-version Testing 1085 0 -disable-cross-import-overlay-search -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import CoreData /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/System/Library/Frameworks/CoreData.framework/Modules/CoreData.swiftcrossimport/CloudKit.swiftoverlay -swift-module-cross-import Darwin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/include/Darwin.swiftcrossimport/xlocale.swiftoverlay -swift-module-cross-import Testing /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks/Testing.framework/Modules/Testing.swiftcrossimport/Foundation.swiftoverlay -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libFoundationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#FoundationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libObservationMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#ObservationMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libPreviewsMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#PreviewsMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins/libSwiftUIMacros.dylib\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server\#SwiftUIMacros -load-resolved-plugin /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins/testing/libTestingMacros.dylib\#\#TestingMacros -disable-implicit-swift-modules -Xcc -fno-implicit-modules -Xcc -fno-implicit-module-maps -explicit-swift-module-map-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests-dependencies-1.json -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk -I /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -Isystem /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib -F /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/Frameworks -F /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator26.0.sdk/Developer/Library/Frameworks -no-color-diagnostics -Xcc -fno-color-diagnostics -enable-testing -g -debug-info-format\=dwarf -dwarf-version\=5 -module-cache-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/SwiftExplicitPrecompiledModules -profile-generate -profile-coverage-mapping -swift-version 5 -enforce-exclusivity\=checked -Onone -D DEBUG -serialize-debugging-options -const-gather-protocols-file /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/FlameworkerTests_const_extract_protocols.json -enable-upcoming-feature DisableOutwardActorInference -enable-upcoming-feature InferSendableFromCaptures -enable-upcoming-feature GlobalActorIsolatedTypesUsability -enable-upcoming-feature MemberImportVisibility -enable-upcoming-feature InferIsolatedConformances -enable-upcoming-feature NonisolatedNonsendingByDefault -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/binde/Library/Developer/Xcode/DerivedData/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -enable-anonymous-context-mangled-names -file-compilation-dir /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker -Xcc -D_LIBCPP_HARDENING_MODE\=_LIBCPP_HARDENING_MODE_DEBUG -Xcc -ivfsstatcache -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/SDKStatCaches.noindex/iphonesimulator26.0-23A339-26257891a6c027eb51374368541b8346.sdkstatcache -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-generated-files.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-own-target-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-all-target-headers.hmap -Xcc -iquote -Xcc /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/FlameworkerTests-project-headers.hmap -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/include -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources-normal/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources/arm64 -Xcc -I/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/DerivedSources -Xcc -DDEBUG\=1 -no-auto-bridging-header-chaining -module-name FlameworkerTests -frontend-parseable-output -disable-clang-spi -target-sdk-version 26.0 -target-sdk-name iphonesimulator26.0 -clang-target arm64-apple-ios26.0-simulator -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ShoppingListServiceTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/SimpleIsolatedTest.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/SortUtilitiesTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/StoreAutoCompleteFieldTests.o -o /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/UserTagsIntegrationTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/ShoppingListServiceTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/SimpleIsolatedTest.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/SortUtilitiesTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/StoreAutoCompleteFieldTests.o -index-unit-output-path /Flameworker.build/Debug-iphonesimulator/FlameworkerTests.build/Objects-normal/arm64/UserTagsIntegrationTests.o -index-store-path /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Index.noindex/DataStore -index-system-modules

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:34:36: warning: main actor-isolated conformance of 'MockItemMinimumRepository' to 'ItemMinimumRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemMinimumRepository: itemMinimumRepo,
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:35:37: warning: main actor-isolated conformance of 'MockShoppingListRepository' to 'ShoppingListRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            shoppingListRepository: shoppingListRepo,
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:36:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            inventoryRepository: inventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:37:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            glassItemRepository: glassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:38:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: itemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:39:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in nonisolated context; this is an error in the Swift 6 language mode
            userTagsRepository: userTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:82:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:93:23: error: extra argument 'location' in call
            location: "shelf-1"
~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:98:39: error: incorrect argument labels in call (have 'item_natural_key:type:quantity:store:', expected 'id:itemNaturalKey:quantity:type:store:')
        let minimum = ItemMinimumModel(
                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:104:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(10.0, forItem: "test-item-1", type: "rod", store: "Test Store")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX110_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX111_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX111_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX111_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:112:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:124:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "002",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:136:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:131:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(
                           ^~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX142_8_6expectfMf1_.swift:1:55: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX143_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },3.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("3.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX143_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },3.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("3.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX143_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },3.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("3.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:144:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.first?.shoppingListItem.neededQuantity == 3.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:154:97: error: argument 'sku' must precede argument 'manufacturer'
        let item1 = GlassItemModel(natural_key: "item-1", name: "Item 1", manufacturer: "test", sku: "001", coe: 96, mfr_status: "available")
                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
                                                                          sku: "001",         
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:155:97: error: argument 'sku' must precede argument 'manufacturer'
        let item2 = GlassItemModel(natural_key: "item-2", name: "Item 2", manufacturer: "test", sku: "002", coe: 96, mfr_status: "available")
                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
                                                                          sku: "002",         
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:160:107: error: extra argument 'location' in call
        let inventory1 = InventoryModel(item_natural_key: "item-1", quantity: 2.0, type: "rod", location: "shelf-1")
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:162:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(5.0, forItem: "item-1", type: "rod", store: "Store A")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:166:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:165:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(item_natural_key: "item-2", quantity: 4.0, store: "Store A")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX172_8_6expectfMf1_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("2")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:175:39: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let items = lists["Store A"]?.items ?? []
                    ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:189:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:196:114: error: extra argument 'location' in call
        let inventory = InventoryModel(item_natural_key: "duplicate-item", quantity: 5.0, type: "rod", location: "shelf-1")
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:200:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(8.0, forItem: "duplicate-item", type: "rod", store: "Same Store")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:204:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:203:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(item_natural_key: "duplicate-item", quantity: 7.0, store: "Same Store")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX210_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Same Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Same Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:214:41: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
        let item = lists["Same Store"]?.items.first
                   ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
                   await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:215:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(item?.shoppingListItem.neededQuantity == 7.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX214_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(item?.shoppingListItem.neededQuantity,{ $0 == $1() },7.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("item?.shoppingListItem.neededQuantity"),"==",.__fromSyntaxNode("7.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:215:9: note: in expansion of macro 'expect' here
        #expect(item?.shoppingListItem.neededQuantity == 7.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:215:9: note: in expansion of macro 'expect' here
        #expect(item?.shoppingListItem.neededQuantity == 7.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX214_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(item?.shoppingListItem.neededQuantity,{ $0 == $1() },7.0,expression: .__fromBinaryOperation(.__fromSyntaxNode("item?.shoppingListItem.neededQuantity"),"==",.__fromSyntaxNode("7.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:215:9: note: in expansion of macro 'expect' here
        #expect(item?.shoppingListItem.neededQuantity == 7.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:215:9: note: in expansion of macro 'expect' here
        #expect(item?.shoppingListItem.neededQuantity == 7.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:223:97: error: argument 'sku' must precede argument 'manufacturer'
        let item1 = GlassItemModel(natural_key: "item-a", name: "Item A", manufacturer: "test", sku: "001", coe: 96, mfr_status: "available")
                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
                                                                          sku: "001",         
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:224:97: error: argument 'sku' must precede argument 'manufacturer'
        let item2 = GlassItemModel(natural_key: "item-b", name: "Item B", manufacturer: "test", sku: "002", coe: 96, mfr_status: "available")
                                                                          ~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
                                                                          sku: "002",         
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:229:107: error: extra argument 'location' in call
        let inventory1 = InventoryModel(item_natural_key: "item-a", quantity: 1.0, type: "rod", location: "shelf-1")
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:231:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(5.0, forItem: "item-a", type: "rod", store: "Store A")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:235:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:234:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(item_natural_key: "item-b", quantity: 3.0, store: "Store B")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX242_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX243_8_6expectfMf3_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store B"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX244_8_6expectfMf4_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store A"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-a",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-a""#, "item-a")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX244_8_6expectfMf4_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store A"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-a",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-a""#, "item-a")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX244_8_6expectfMf4_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store A"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-a",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-a""#, "item-a")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:245:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.first?.glassItem.natural_key == "item-a")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX245_8_6expectfMf5_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store B"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-b",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-b""#, "item-b")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX245_8_6expectfMf5_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store B"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-b",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-b""#, "item-b")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX245_8_6expectfMf5_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Store B"]?.items.first?.glassItem.natural_key,{ $0 == $1() },"item-b",expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.first?.glassItem.natural_key"#),"==",.__fromStringLiteral(#""item-b""#, "item-b")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:246:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.first?.glassItem.natural_key == "item-b")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:258:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:270:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:265:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(
                           ^~~~~~~~~~~~~~~~~~
                           await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX276_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Other"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Other"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:291:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:299:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(5.0, forItem: "zero-item", type: "rod", store: "Test Store")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX305_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX306_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX306_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX306_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity,{ $0 == $1() },5.0,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity"#),"==",.__fromSyntaxNode("5.0")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:307:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.first?.shoppingListItem.neededQuantity == 5.0)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:319:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:326:110: error: extra argument 'location' in call
        let inventory = InventoryModel(item_natural_key: "full-item", quantity: 10.0, type: "rod", location: "shelf-1")
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:330:37: warning: result of call to 'setMinimumQuantity(_:forItem:type:store:)' is unused
        try await repos.itemMinimum.setMinimumQuantity(5.0, forItem: "full-item", type: "rod", store: "Test Store")
                                    ^                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX335_8_6expectfMf_.swift:1:82: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(lists.isEmpty,{ $0 || $1() },lists["Test Store"]?.items.isEmpty == true,expression: .__fromBinaryOperation(.__fromSyntaxNode("lists.isEmpty"),"||",.__fromSyntaxNode(#"lists["Test Store"]?.items.isEmpty == true"#)),comments: [.__line("// Should be empty since item is above minimum")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListModel.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.DetailedShoppingListItemModel]}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:348:13: error: argument 'sku' must precede argument 'manufacturer'
            sku: "001",
~~~~~~~~~~~~^~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:359:38: warning: result of call to 'createItem' is unused
        try await repos.shoppingList.createItem(shoppingItem)
                                     ^         ~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:358:28: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingItem = ItemShoppingModel(item_natural_key: "tagged-item", quantity: 3.0, store: "Tag Store")
                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                           await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:364:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Tag Store"]?.items.first?.tags.count == 3)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX363_8_6expectfMf_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.count,{ $0 == $1() },3,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.count"#),"==",.__fromSyntaxNode("3")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:364:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.count == 3)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:364:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.count == 3)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX363_8_6expectfMf_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.count,{ $0 == $1() },3,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.count"#),"==",.__fromSyntaxNode("3")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:364:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.count == 3)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:364:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.count == 3)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:365:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Tag Store"]?.items.first?.tags.contains("transparent") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX364_8_6expectfMf0_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("transparent"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("transparent")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:365:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("transparent") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:365:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("transparent") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX364_8_6expectfMf0_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("transparent"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("transparent")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:365:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("transparent") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:365:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("transparent") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:366:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Tag Store"]?.items.first?.tags.contains("rod") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX365_8_6expectfMf1_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("rod"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("rod")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:366:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("rod") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:366:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("rod") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX365_8_6expectfMf1_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("rod"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("rod")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:366:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("rod") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:366:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("rod") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:367:9: warning: expression is 'async' but is not marked with 'await'; this is an error in the Swift 6 language mode
        #expect(lists["Tag Store"]?.items.first?.tags.contains("coe96") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        await 
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX366_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("coe96"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("coe96")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:367:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("coe96") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:367:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("coe96") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX366_8_6expectfMf2_.swift:1:32: note: property access is 'async'
Testing.__checkBinaryOperation(lists["Tag Store"]?.items.first?.tags.contains("coe96"),{ $0 == $1() },true,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Tag Store"]?.items.first?.tags.contains("coe96")"#),"==",.__fromSyntaxNode("true")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:367:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("coe96") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:367:9: note: in expansion of macro 'expect' here
        #expect(lists["Tag Store"]?.items.first?.tags.contains("coe96") == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0029SimpleIsolatedTestswift_tAFJhfMX58_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(items.first?.natural_key,{ $0 == $1() },"ultra-simple-test",expression: .__fromBinaryOperation(.__fromSyntaxNode("items.first?.natural_key"),"==",.__fromStringLiteral(#""ultra-simple-test""#, "ultra-simple-test")),comments: ["Should have correct item"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX110_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX142_8_6expectfMf1_.swift:1:55: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX172_8_6expectfMf1_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("2")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX210_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Same Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Same Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX242_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX243_8_6expectfMf3_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store B"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX276_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Other"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Other"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX305_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX335_8_6expectfMf_.swift:1:82: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(lists.isEmpty,{ $0 || $1() },lists["Test Store"]?.items.isEmpty == true,expression: .__fromBinaryOperation(.__fromSyntaxNode("lists.isEmpty"),"||",.__fromSyntaxNode(#"lists["Test Store"]?.items.isEmpty == true"#)),comments: [.__line("// Should be empty since item is above minimum")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListModel.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.DetailedShoppingListItemModel]}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:33:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockGlassItemRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:34:18: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockRepo.clearAllData()
        ~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:37:24: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let testItem = GlassItemModel(
                       ^~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:55:31: warning: main actor-isolated property 'name' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("  - \(item.name) (\(item.natural_key)) by \(item.manufacturer)")
                         ~~~~~^~~~
                         await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:55:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("  - \(item.name) (\(item.natural_key)) by \(item.manufacturer)")
                                       ~~~~~^~~~~~~~~~~
                                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:55:69: warning: main actor-isolated property 'manufacturer' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
            print("  - \(item.name) (\(item.natural_key)) by \(item.manufacturer)")
                                                               ~~~~~^~~~~~~~~~~~
                                                               await 
@__swiftmacro_16FlameworkerTests0029SimpleIsolatedTestswift_tAFJhfMX58_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(items.first?.natural_key,{ $0 == $1() },"ultra-simple-test",expression: .__fromBinaryOperation(.__fromSyntaxNode("items.first?.natural_key"),"==",.__fromStringLiteral(#""ultra-simple-test""#, "ultra-simple-test")),comments: ["Should have correct item"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:90:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: mockGlassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:91:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: mockInventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:92:33: warning: main actor-isolated conformance of 'MockLocationRepository' to 'LocationRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            locationRepository: mockLocationRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:93:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: mockItemTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:98:36: warning: main actor-isolated conformance of 'MockItemMinimumRepository' to 'ItemMinimumRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemMinimumRepository: mockItemMinimumRepo,
                                   ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:99:37: warning: main actor-isolated conformance of 'MockShoppingListRepository' to 'ShoppingListRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            shoppingListRepository: shoppingListRepository,
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:100:34: warning: main actor-isolated conformance of 'MockInventoryRepository' to 'InventoryRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            inventoryRepository: mockInventoryRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:101:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: mockGlassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:102:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: mockItemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:103:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            userTagsRepository: mockUserTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:107:34: warning: main actor-isolated conformance of 'MockGlassItemRepository' to 'GlassItemRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            glassItemRepository: mockGlassItemRepo,
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:110:33: warning: main actor-isolated conformance of 'MockItemTagsRepository' to 'ItemTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            itemTagsRepository: mockItemTagsRepo,
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:111:33: warning: main actor-isolated conformance of 'MockUserTagsRepository' to 'UserTagsRepository' cannot be used in caller isolation inheriting-isolated context; this is an error in the Swift 6 language mode
            userTagsRepository: mockUserTagsRepo
                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:69:33: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockGlassItemRepo = MockGlassItemRepository()
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:70:33: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockInventoryRepo = MockInventoryRepository()
                                ^~~~~~~~~~~~~~~~~~~~~~~~~
                                await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:71:32: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockLocationRepo = MockLocationRepository()
                               ^~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:72:32: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockItemTagsRepo = MockItemTagsRepository()
                               ^~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:73:32: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockUserTagsRepo = MockUserTagsRepository()
                               ^~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:74:35: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockItemMinimumRepo = MockItemMinimumRepository()
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:77:27: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockGlassItemRepo.clearAllData()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:78:27: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockInventoryRepo.clearAllData()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:79:26: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockLocationRepo.clearAllData()
        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:80:26: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockItemTagsRepo.clearAllData()
        ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:81:29: warning: main actor-isolated instance method 'clearAllData()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        mockItemMinimumRepo.clearAllData()
        ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:89:32: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryRepository:locationRepository:itemTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let inventoryService = InventoryTrackingService(
                               ^~~~~~~~~~~~~~~~~~~~~~~~~
                               await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:96:38: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListRepository = MockShoppingListRepository()
                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                     await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:97:31: warning: main actor-isolated initializer 'init(itemMinimumRepository:shoppingListRepository:inventoryRepository:glassItemRepository:itemTagsRepository:userTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingService = ShoppingListService(
                              ^~~~~~~~~~~~~~~~~~~~
                              await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:106:30: warning: main actor-isolated initializer 'init(glassItemRepository:inventoryTrackingService:shoppingListService:itemTagsRepository:userTagsRepository:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = CatalogService(
                             ^~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:115:26: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let directItem = GlassItemModel(
                         ^~~~~~~~~~~~~~~
                         await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX110_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX142_8_6expectfMf1_.swift:1:55: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX172_8_6expectfMf1_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("2")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX210_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Same Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Same Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX242_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX243_8_6expectfMf3_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store B"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX276_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Other"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Other"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX305_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX335_8_6expectfMf_.swift:1:82: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(lists.isEmpty,{ $0 || $1() },lists["Test Store"]?.items.isEmpty == true,expression: .__fromBinaryOperation(.__fromSyntaxNode("lists.isEmpty"),"||",.__fromSyntaxNode(#"lists["Test Store"]?.items.isEmpty == true"#)),comments: [.__line("// Should be empty since item is above minimum")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListModel.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.DetailedShoppingListItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0029SimpleIsolatedTestswift_tAFJhfMX58_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(items.first?.natural_key,{ $0 == $1() },"ultra-simple-test",expression: .__fromBinaryOperation(.__fromSyntaxNode("items.first?.natural_key"),"==",.__fromStringLiteral(#""ultra-simple-test""#, "ultra-simple-test")),comments: ["Should have correct item"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift:139:43: warning: 'sortCatalog(_:by:)' is deprecated: Use sortGlassItems instead
        let sortedCatalog = SortUtilities.sortCatalog(glassItems, by: "any")
                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift:140:45: warning: 'sortInventory(_:by:)' is deprecated: Use sortInventoryModels instead
        let sortedInventory = SortUtilities.sortInventory(inventoryItems, by: "any")
                                            ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX110_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX142_8_6expectfMf1_.swift:1:55: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX172_8_6expectfMf1_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("2")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX210_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Same Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Same Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX242_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX243_8_6expectfMf3_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store B"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX276_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Other"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Other"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX305_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX335_8_6expectfMf_.swift:1:82: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(lists.isEmpty,{ $0 || $1() },lists["Test Store"]?.items.isEmpty == true,expression: .__fromBinaryOperation(.__fromSyntaxNode("lists.isEmpty"),"||",.__fromSyntaxNode(#"lists["Test Store"]?.items.isEmpty == true"#)),comments: [.__line("// Should be empty since item is above minimum")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListModel.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.DetailedShoppingListItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0029SimpleIsolatedTestswift_tAFJhfMX58_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(items.first?.natural_key,{ $0 == $1() },"ultra-simple-test",expression: .__fromBinaryOperation(.__fromSyntaxNode("items.first?.natural_key"),"==",.__fromStringLiteral(#""ultra-simple-test""#, "ultra-simple-test")),comments: ["Should have correct item"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:43:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockShoppingListRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:46:21: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item1 = ItemShoppingModel(
                    ^~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:51:21: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item2 = ItemShoppingModel(
                    ^~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:56:21: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item3 = ItemShoppingModel(
                    ^~~~~~~~~~~~~~~~~~
                    await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:77:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockShoppingListRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:124:24: warning: main actor-isolated initializer 'init()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let mockRepo = MockShoppingListRepository()
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift:126:20: warning: main actor-isolated initializer 'init(id:item_natural_key:quantity:store:type:subtype:subsubtype:dateAdded:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let item = ItemShoppingModel(
                   ^~~~~~~~~~~~~~~~~~
                   await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX110_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:111:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX142_8_6expectfMf1_.swift:1:55: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Manual Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Manual Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                      ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:143:9: note: in expansion of macro 'expect' here
        #expect(lists["Manual Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX175_8_6expectfMf2_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:176:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-1" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:59: warning: main actor-isolated property 'itemNaturalKey' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                          ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.ShoppingListItemModel.itemNaturalKey:2:25: note: property declared here
@MainActor internal let itemNaturalKey: String}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX176_8_6expectfMf3_.swift:1:42: warning: main actor-isolated property 'shoppingListItem' can not be referenced from a nonisolated context
Testing.__checkValue(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" },expression: .__fromSyntaxNode(#"items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" }"#),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                         ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:177:9: note: in expansion of macro 'expect' here
        #expect(items.contains { $0.shoppingListItem.itemNaturalKey == "item-2" })
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListItemModel.shoppingListItem:2:25: note: property declared here
@MainActor internal let shoppingListItem: Flameworker.ShoppingListItemModel}
                        ^
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX172_8_6expectfMf1_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },2,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("2")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:173:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 2)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX210_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Same Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Same Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:211:9: note: in expansion of macro 'expect' here
        #expect(lists["Same Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX242_8_6expectfMf2_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store A"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store A"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:243:9: note: in expansion of macro 'expect' here
        #expect(lists["Store A"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX243_8_6expectfMf3_.swift:1:50: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Store B"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Store B"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:244:9: note: in expansion of macro 'expect' here
        #expect(lists["Store B"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX276_8_6expectfMf1_.swift:1:48: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Other"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Other"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                               ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:277:9: note: in expansion of macro 'expect' here
        #expect(lists["Other"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX305_8_6expectfMf1_.swift:1:53: warning: main actor-isolated property 'items' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(lists["Test Store"]?.items.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"lists["Test Store"]?.items.count"#),"==",.__fromSyntaxNode("1")),comments: [],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:306:9: note: in expansion of macro 'expect' here
        #expect(lists["Test Store"]?.items.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035ShoppingListServiceTestsswift_IgGGkfMX335_8_6expectfMf_.swift:1:82: warning: main actor-isolated property 'items' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(lists.isEmpty,{ $0 || $1() },lists["Test Store"]?.items.isEmpty == true,expression: .__fromBinaryOperation(.__fromSyntaxNode("lists.isEmpty"),"||",.__fromSyntaxNode(#"lists["Test Store"]?.items.isEmpty == true"#)),comments: [.__line("// Should be empty since item is above minimum")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift:336:9: note: in expansion of macro 'expect' here
        #expect(lists.isEmpty || lists["Test Store"]?.items.isEmpty == true)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.DetailedShoppingListModel.items:2:25: note: property declared here
@MainActor internal let items: [Flameworker.DetailedShoppingListItemModel]}
                        ^
@__swiftmacro_16FlameworkerTests0029SimpleIsolatedTestswift_tAFJhfMX58_8_6expectfMf0_.swift:1:45: warning: main actor-isolated property 'natural_key' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(items.first?.natural_key,{ $0 == $1() },"ultra-simple-test",expression: .__fromBinaryOperation(.__fromSyntaxNode("items.first?.natural_key"),"==",.__fromStringLiteral(#""ultra-simple-test""#, "ultra-simple-test")),comments: ["Should have correct item"],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                            ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift:59:9: note: in expansion of macro 'expect' here
        #expect(items.first?.natural_key == "ultra-simple-test", "Should have correct item")
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:65: warning: main actor-isolated property 'allTags' can not be referenced from a nonisolated autoclosure
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                                                ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Flameworker.CompleteInventoryItemModel.allTags:2:25: note: property declared here
@MainActor internal var allTags: [String] { get }}
                        ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:20:25: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItem = GlassItemModel(
                        ^~~~~~~~~~~~~~~
                        await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX37_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:38:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("blue"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX38_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:39:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("transparent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX39_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:40:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX40_8_6expectfMf2_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:41:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("favorite"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX41_8_6expectfMf3_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:42:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("project-A"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX44_8_6expectfMf4_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "blue" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "blue" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "blue" appears only once (deduplicated)"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:45:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "blue" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX47_8_6expectfMf5_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags,{ $0 == $1() },item.allTags.sorted(),expression: .__fromBinaryOperation(.__fromSyntaxNode("item.allTags"),"==",.__fromSyntaxNode("item.allTags.sorted()")),comments: [.__line("// Verify tags are sorted")],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:48:9: note: in expansion of macro 'expect' here
        #expect(item.allTags == item.allTags.sorted())
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:54:25: warning: main actor-isolated initializer 'init(natural_key:name:sku:manufacturer:mfr_notes:coe:url:mfr_status:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let glassItem = GlassItemModel(
                        ^~~~~~~~~~~~~~~
                        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:63:32: warning: main actor-isolated initializer 'init(itemNaturalKey:type:currentQuantity:minimumQuantity:store:)' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListItem = ShoppingListItemModel(
                               ^~~~~~~~~~~~~~~~~~~~~~
                               await 
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX78_8_6expectfMf_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:79:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("clear"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX79_8_6expectfMf0_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:80:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("rod"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX80_8_6expectfMf1_.swift:1:34: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkFunctionCall(item.allTags.self,calling: {
                                 ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:81:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.contains("urgent"))
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
@__swiftmacro_16FlameworkerTests0035UserTagsIntegrationTestsswift_IgGGkfMX83_8_6expectfMf2_.swift:1:37: warning: main actor-isolated property 'allTags' cannot be accessed from outside of the actor; this is an error in the Swift 6 language mode
Testing.__checkBinaryOperation(item.allTags.filter { $0 == "clear" }.count,{ $0 == $1() },1,expression: .__fromBinaryOperation(.__fromSyntaxNode(#"item.allTags.filter { $0 == "clear" }.count"#),"==",.__fromSyntaxNode("1")),comments: [.__line(#"// Verify "clear" appears only once"#)],isRequired: false,sourceLocation: Testing.SourceLocation.__here()).__expected()
                                    ^
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:84:9: note: in expansion of macro 'expect' here
        #expect(item.allTags.filter { $0 == "clear" }.count == 1)
        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:93:13: warning: initialization of immutable value 'catalogService' was never used; consider replacing with assignment to '_' or removing it
        let catalogService = RepositoryFactory.createCatalogService()
        ~~~~^~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:92:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:93:48: warning: main actor-isolated static method 'createCatalogService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = RepositoryFactory.createCatalogService()
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
                             await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:104:13: warning: initialization of immutable value 'shoppingListService' was never used; consider replacing with assignment to '_' or removing it
        let shoppingListService = RepositoryFactory.createShoppingListService()
        ~~~~^~~~~~~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:103:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:104:53: warning: main actor-isolated static method 'createShoppingListService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let shoppingListService = RepositoryFactory.createShoppingListService()
                                  ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:145:13: warning: initialization of immutable value 'catalogService' was never used; consider replacing with assignment to '_' or removing it
        let catalogService = RepositoryFactory.createCatalogService()
        ~~~~^~~~~~~~~~~~~~
        _
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:144:27: warning: main actor-isolated static method 'configureForTesting()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        RepositoryFactory.configureForTesting()
        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
        await 
/Users/binde/Library/Mobile Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift:145:48: warning: main actor-isolated static method 'createCatalogService()' cannot be called from outside of the actor; this is an error in the Swift 6 language mode
        let catalogService = RepositoryFactory.createCatalogService()
                             ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
                             await 

SwiftCompile normal arm64 Compiling\ BasicFunctionalityTests.swift,\ CatalogBuildModelTests.swift,\ CatalogBundleDebugViewTests.swift,\ CatalogItemEntityTests.swift,\ CatalogItemHelpersTests.swift,\ CatalogItemModelPhase1Tests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/BasicFunctionalityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBuildModelTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogBundleDebugViewTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemEntityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemHelpersTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CatalogItemModelPhase1Tests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 Compiling\ NetworkSimulationTests.swift,\ NewTestTemplate.swift,\ RepositoryIdentityTest.swift,\ SearchTextParserTests.swift,\ SearchUtilitiesConfigurationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NetworkSimulationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NewTestTemplate.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NetworkSimulationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/NewTestTemplate.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/RepositoryIdentityTest.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchTextParserTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SearchUtilitiesConfigurationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

ConstructStubExecutorLinkFileList /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-ExecutorLinkFileList-normal-arm64.txt (in target 'Flameworker' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    construct-stub-executor-link-file-list /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Products/Debug-iphonesimulator/Flameworker.app/Flameworker.debug.dylib /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libPreviewsJITStubExecutor_no_swift_entry_point.a /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/lib/libPreviewsJITStubExecutor.a --output /Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Build/Intermediates.noindex/Flameworker.build/Debug-iphonesimulator/Flameworker.build/Flameworker-ExecutorLinkFileList-normal-arm64.txt
note: Using stub executor library with Swift entry point. (in target 'Flameworker' from project 'Flameworker')

SwiftDriverJobDiscovery normal arm64 Compiling JSONDataLoaderTests.swift, LocationAutoCompleteFieldTests.swift, LocationServiceTests.swift, MainTabViewTests.swift, MultiUserScenarioTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 Compiling\ CoreFunctionalityTests.swift,\ CrossEntityIntegrationTests.swift,\ DataInitializationServiceTests.swift,\ DataLoadingServiceTests.swift,\ DataModelValidationTests.swift,\ DiagnosticTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CrossEntityIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataInitializationServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataLoadingServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataModelValidationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift (in target 'FlameworkerTests' from project 'Flameworker')

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CoreFunctionalityTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/CrossEntityIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataInitializationServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataLoadingServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DataModelValidationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    

SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/DiagnosticTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
    cd /Users/binde/Library/Mobile\ Documents/com\~apple\~CloudDocs/Flameworker
    


Test session results, code coverage, and logs:
	/Users/binde/Library/Developer/Xcode/DerivedData/Flameworker-ceyhfmivhguynagohidrsoqdxgqb/Logs/Test/Test-Flameworker-2025.10.17_21-25-23--0700.xcresult

Testing failed:
	Argument 'sku' must precede argument 'manufacturer'
	Extra argument 'location' in call
	Incorrect argument labels in call (have 'item_natural_key:type:quantity:store:', expected 'id:itemNaturalKey:quantity:type:store:')
	Argument 'sku' must precede argument 'manufacturer'
	Argument 'sku' must precede argument 'manufacturer'
	Argument 'sku' must precede argument 'manufacturer'
	Extra argument 'location' in call
	Argument 'sku' must precede argument 'manufacturer'
	Extra argument 'location' in call
	Argument 'sku' must precede argument 'manufacturer'
	Argument 'sku' must precede argument 'manufacturer'
	Extra argument 'location' in call
	Argument 'sku' must precede argument 'manufacturer'
	Argument 'sku' must precede argument 'manufacturer'
	Argument 'sku' must precede argument 'manufacturer'
	Extra argument 'location' in call
	Argument 'sku' must precede argument 'manufacturer'
	Testing cancelled because the build failed.

** TEST FAILED **


The following build commands failed:
	SwiftCompile normal arm64 Compiling\ ShoppingListServiceTests.swift,\ SimpleIsolatedTest.swift,\ SortUtilitiesTests.swift,\ StoreAutoCompleteFieldTests.swift,\ UserTagsIntegrationTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SimpleIsolatedTest.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/SortUtilitiesTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/StoreAutoCompleteFieldTests.swift /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/UserTagsIntegrationTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	SwiftCompile normal arm64 /Users/binde/Library/Mobile\ Documents/com~apple~CloudDocs/Flameworker/Flameworker/Tests/FlameworkerTests/ShoppingListServiceTests.swift (in target 'FlameworkerTests' from project 'Flameworker')
	Testing project Flameworker with scheme Flameworker
(3 failures)
